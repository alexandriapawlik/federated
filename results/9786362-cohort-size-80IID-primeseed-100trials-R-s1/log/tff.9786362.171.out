
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9786362’: File exists
mkdir: cannot create directory ‘results/9786362/log’: File exists
2020-07-20 23:53:37.750497: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  171
2020-07-20 23:53:37.271752

How often each label is chosen for non-IID data
[8, 23, 20, 21, 20, 23, 21, 20, 16, 28]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10599999874830246,loss=2.3043832778930664>
2.8954 seconds
Tested. Sparse categorical accuracy: 8.33

round  2, metrics=<sparse_categorical_accuracy=0.11599999666213989,loss=2.2965242862701416>
2.1552 seconds
Tested. Sparse categorical accuracy: 11.67

round  3, metrics=<sparse_categorical_accuracy=0.11533333361148834,loss=2.285165786743164>
2.2185 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.1303333342075348,loss=2.264888048171997>
2.1149 seconds
Tested. Sparse categorical accuracy: 38.33

round  5, metrics=<sparse_categorical_accuracy=0.22466666996479034,loss=2.2008450031280518>
2.2462 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.3583333194255829,loss=2.0676791667938232>
2.0812 seconds
Tested. Sparse categorical accuracy: 50.00

round  7, metrics=<sparse_categorical_accuracy=0.3033333420753479,loss=2.417980670928955>
2.2690 seconds
Tested. Sparse categorical accuracy: 36.67

round  8, metrics=<sparse_categorical_accuracy=0.40299999713897705,loss=2.1647632122039795>
2.0508 seconds
Tested. Sparse categorical accuracy: 58.33

round  9, metrics=<sparse_categorical_accuracy=0.46833333373069763,loss=1.7773469686508179>
2.2168 seconds
Tested. Sparse categorical accuracy: 71.67

round 10, metrics=<sparse_categorical_accuracy=0.49166667461395264,loss=1.956973910331726>
2.0613 seconds
Tested. Sparse categorical accuracy: 30.00

round 11, metrics=<sparse_categorical_accuracy=0.515666663646698,loss=1.4664615392684937>
2.0872 seconds
Tested. Sparse categorical accuracy: 68.33

round 12, metrics=<sparse_categorical_accuracy=0.6100000143051147,loss=1.4288156032562256>
2.2069 seconds
Tested. Sparse categorical accuracy: 66.67

round 13, metrics=<sparse_categorical_accuracy=0.7106666564941406,loss=1.0033575296401978>
2.0325 seconds
Tested. Sparse categorical accuracy: 83.33

round 14, metrics=<sparse_categorical_accuracy=0.7960000038146973,loss=0.6828998923301697>
2.1992 seconds
Tested. Sparse categorical accuracy: 96.67

round 15, metrics=<sparse_categorical_accuracy=0.8389999866485596,loss=0.5649350881576538>
2.0164 seconds
Tested. Sparse categorical accuracy: 68.33

round 16, metrics=<sparse_categorical_accuracy=0.8526666760444641,loss=0.5257404446601868>
2.0652 seconds
Tested. Sparse categorical accuracy: 88.33

round 17, metrics=<sparse_categorical_accuracy=0.8536666631698608,loss=0.4924042224884033>
2.2292 seconds
Tested. Sparse categorical accuracy: 73.33

round 18, metrics=<sparse_categorical_accuracy=0.8643333315849304,loss=0.4931490421295166>
2.0825 seconds
Tested. Sparse categorical accuracy: 95.00

round 19, metrics=<sparse_categorical_accuracy=0.887666642665863,loss=0.3512824773788452>
2.1993 seconds
Tested. Sparse categorical accuracy: 100.00

round 20, metrics=<sparse_categorical_accuracy=0.9106666445732117,loss=0.32719892263412476>
2.0454 seconds
Tested. Sparse categorical accuracy: 96.67

round 21, metrics=<sparse_categorical_accuracy=0.9176666736602783,loss=0.2635193169116974>
2.0397 seconds
Tested. Sparse categorical accuracy: 91.67

round 22, metrics=<sparse_categorical_accuracy=0.9300000071525574,loss=0.249678835272789>
2.2348 seconds
Tested. Sparse categorical accuracy: 90.00

round 23, metrics=<sparse_categorical_accuracy=0.8933333158493042,loss=0.33536380529403687>
2.0511 seconds
Tested. Sparse categorical accuracy: 96.67

round 24, metrics=<sparse_categorical_accuracy=0.9179999828338623,loss=0.2627568542957306>
2.0453 seconds
Tested. Sparse categorical accuracy: 98.33

24  rounds run
Average time per round: 2.00

preds
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 326, in train
    print(preds)
UnboundLocalError: local variable 'preds' referenced before assignment
