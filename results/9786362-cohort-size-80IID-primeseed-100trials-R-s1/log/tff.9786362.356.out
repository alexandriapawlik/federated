
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9786362’: File exists
mkdir: cannot create directory ‘results/9786362/log’: File exists
2020-07-21 00:13:55.148514: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  356
2020-07-21 00:13:54.667776

How often each label is chosen for non-IID data
[20, 13, 21, 27, 21, 18, 22, 17, 19, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.07900000363588333,loss=2.3044841289520264>
3.0092 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.10633333027362823,loss=2.291525363922119>
2.1806 seconds
Tested. Sparse categorical accuracy: 6.67

round  3, metrics=<sparse_categorical_accuracy=0.13099999725818634,loss=2.2672410011291504>
2.2865 seconds
Tested. Sparse categorical accuracy: 41.67

round  4, metrics=<sparse_categorical_accuracy=0.18266665935516357,loss=2.2114362716674805>
2.0921 seconds
Tested. Sparse categorical accuracy: 48.33

round  5, metrics=<sparse_categorical_accuracy=0.3019999861717224,loss=2.1523916721343994>
2.2431 seconds
Tested. Sparse categorical accuracy: 51.67

round  6, metrics=<sparse_categorical_accuracy=0.4723333418369293,loss=2.081183671951294>
2.1351 seconds
Tested. Sparse categorical accuracy: 58.33

round  7, metrics=<sparse_categorical_accuracy=0.4803333282470703,loss=2.162389039993286>
2.2307 seconds
Tested. Sparse categorical accuracy: 33.33

round  8, metrics=<sparse_categorical_accuracy=0.4546666741371155,loss=1.8004742860794067>
2.0458 seconds
Tested. Sparse categorical accuracy: 58.33

round  9, metrics=<sparse_categorical_accuracy=0.6013333201408386,loss=1.4346109628677368>
2.1997 seconds
Tested. Sparse categorical accuracy: 63.33

round 10, metrics=<sparse_categorical_accuracy=0.6456666588783264,loss=1.2495218515396118>
2.0601 seconds
Tested. Sparse categorical accuracy: 70.00

round 11, metrics=<sparse_categorical_accuracy=0.731333315372467,loss=0.9128716588020325>
2.0670 seconds
Tested. Sparse categorical accuracy: 78.33

round 12, metrics=<sparse_categorical_accuracy=0.840666651725769,loss=0.5646514296531677>
2.1943 seconds
Tested. Sparse categorical accuracy: 80.00

round 13, metrics=<sparse_categorical_accuracy=0.7736666798591614,loss=0.8432367444038391>
2.0225 seconds
Tested. Sparse categorical accuracy: 76.67

round 14, metrics=<sparse_categorical_accuracy=0.8543333411216736,loss=0.5229876041412354>
2.2286 seconds
Tested. Sparse categorical accuracy: 100.00

round 15, metrics=<sparse_categorical_accuracy=0.8759999871253967,loss=0.4786145091056824>
2.0569 seconds
Tested. Sparse categorical accuracy: 88.33

round 16, metrics=<sparse_categorical_accuracy=0.8740000128746033,loss=0.44552111625671387>
2.0732 seconds
Tested. Sparse categorical accuracy: 83.33

round 17, metrics=<sparse_categorical_accuracy=0.9006666541099548,loss=0.3600398898124695>
2.2083 seconds
Tested. Sparse categorical accuracy: 93.33

round 18, metrics=<sparse_categorical_accuracy=0.8823333382606506,loss=0.38190680742263794>
2.0519 seconds
Tested. Sparse categorical accuracy: 85.00

round 19, metrics=<sparse_categorical_accuracy=0.8983333110809326,loss=0.34993603825569153>
2.0282 seconds
Tested. Sparse categorical accuracy: 90.00

round 20, metrics=<sparse_categorical_accuracy=0.9283333420753479,loss=0.2561355531215668>
2.2030 seconds
Tested. Sparse categorical accuracy: 90.00

round 21, metrics=<sparse_categorical_accuracy=0.9073333144187927,loss=0.28868767619132996>
2.0952 seconds
Tested. Sparse categorical accuracy: 100.00

round 22, metrics=<sparse_categorical_accuracy=0.9276666641235352,loss=0.24946683645248413>
2.2262 seconds
Tested. Sparse categorical accuracy: 98.33

round 23, metrics=<sparse_categorical_accuracy=0.918666660785675,loss=0.25634780526161194>
2.0266 seconds
Tested. Sparse categorical accuracy: 96.67

round 24, metrics=<sparse_categorical_accuracy=0.9290000200271606,loss=0.2352939397096634>
2.0323 seconds
Tested. Sparse categorical accuracy: 91.67

24  rounds run
Average time per round: 2.00

preds
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 326, in train
    print(preds)
UnboundLocalError: local variable 'preds' referenced before assignment
