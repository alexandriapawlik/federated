
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:49:43.666900: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  452
2020-07-15 23:49:43.184615

How often each label is chosen for non-IID data
[20, 23, 29, 12, 16, 10, 27, 20, 22, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12316666543483734,loss=2.29282283782959>
5.9416 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.13733333349227905,loss=2.2605855464935303>
4.2805 seconds
Tested. Sparse categorical accuracy: 53.33

round  3, metrics=<sparse_categorical_accuracy=0.27783334255218506,loss=2.149658679962158>
4.3374 seconds
Tested. Sparse categorical accuracy: 53.33

round  4, metrics=<sparse_categorical_accuracy=0.2561666667461395,loss=2.404811143875122>
4.1250 seconds
Tested. Sparse categorical accuracy: 6.67

round  5, metrics=<sparse_categorical_accuracy=0.22949999570846558,loss=2.2089102268218994>
4.2130 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.34150001406669617,loss=1.973459005355835>
4.1926 seconds
Tested. Sparse categorical accuracy: 53.33

round  7, metrics=<sparse_categorical_accuracy=0.5166666507720947,loss=1.5872950553894043>
4.1408 seconds
Tested. Sparse categorical accuracy: 63.33

round  8, metrics=<sparse_categorical_accuracy=0.6266666650772095,loss=1.2255619764328003>
4.2717 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.7491666674613953,loss=0.8286557793617249>
4.3432 seconds
Tested. Sparse categorical accuracy: 83.33

round 10, metrics=<sparse_categorical_accuracy=0.8065000176429749,loss=0.6339763402938843>
3.9141 seconds
Tested. Sparse categorical accuracy: 86.67

round 11, metrics=<sparse_categorical_accuracy=0.856333315372467,loss=0.4857800006866455>
4.2244 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.8899999856948853,loss=0.3527712821960449>
4.1848 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
