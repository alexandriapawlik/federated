
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:12:07.696329: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  87
2020-07-15 23:12:07.206934

How often each label is chosen for non-IID data
[22, 23, 16, 20, 21, 21, 23, 19, 19, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09866666793823242,loss=2.2772858142852783>
6.0448 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.1783333271741867,loss=2.226337432861328>
4.3775 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.3023333251476288,loss=2.2899463176727295>
4.2337 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.20133332908153534,loss=2.2727808952331543>
4.2122 seconds
Tested. Sparse categorical accuracy: 20.00

round  5, metrics=<sparse_categorical_accuracy=0.3163333237171173,loss=2.1706979274749756>
4.2483 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.44566667079925537,loss=1.9829530715942383>
4.3426 seconds
Tested. Sparse categorical accuracy: 70.00

round  7, metrics=<sparse_categorical_accuracy=0.5451666712760925,loss=1.5596153736114502>
4.3546 seconds
Tested. Sparse categorical accuracy: 40.00

round  8, metrics=<sparse_categorical_accuracy=0.6461666822433472,loss=1.2171765565872192>
4.2425 seconds
Tested. Sparse categorical accuracy: 70.00

round  9, metrics=<sparse_categorical_accuracy=0.7403333187103271,loss=0.8196153044700623>
4.3269 seconds
Tested. Sparse categorical accuracy: 63.33

round 10, metrics=<sparse_categorical_accuracy=0.8083333373069763,loss=0.6020005941390991>
4.3027 seconds
Tested. Sparse categorical accuracy: 73.33

round 11, metrics=<sparse_categorical_accuracy=0.8573333621025085,loss=0.49932876229286194>
4.2882 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.8886666893959045,loss=0.38647106289863586>
4.2212 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
