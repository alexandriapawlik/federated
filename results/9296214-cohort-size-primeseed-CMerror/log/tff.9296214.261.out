
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:29:35.281196: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  261
2020-07-15 23:29:34.798437

How often each label is chosen for non-IID data
[29, 21, 30, 14, 16, 15, 22, 14, 20, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09033333510160446,loss=2.3036112785339355>
3.0753 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.10199999809265137,loss=2.2885348796844482>
2.2300 seconds
Tested. Sparse categorical accuracy: 18.33

round  3, metrics=<sparse_categorical_accuracy=0.14233332872390747,loss=2.282679796218872>
2.2761 seconds
Tested. Sparse categorical accuracy: 17.50

round  4, metrics=<sparse_categorical_accuracy=0.19900000095367432,loss=2.2349822521209717>
2.1650 seconds
Tested. Sparse categorical accuracy: 18.33

round  5, metrics=<sparse_categorical_accuracy=0.18466666340827942,loss=2.1687397956848145>
2.2829 seconds
Tested. Sparse categorical accuracy: 60.00

round  6, metrics=<sparse_categorical_accuracy=0.36133334040641785,loss=2.1100451946258545>
2.2046 seconds
Tested. Sparse categorical accuracy: 65.00

round  7, metrics=<sparse_categorical_accuracy=0.4659999907016754,loss=1.884832739830017>
2.2337 seconds
Tested. Sparse categorical accuracy: 40.00

round  8, metrics=<sparse_categorical_accuracy=0.445333331823349,loss=2.2337875366210938>
2.0736 seconds
Tested. Sparse categorical accuracy: 68.33

round  9, metrics=<sparse_categorical_accuracy=0.5400000214576721,loss=1.726818561553955>
2.2101 seconds
Tested. Sparse categorical accuracy: 63.33

round 10, metrics=<sparse_categorical_accuracy=0.652999997138977,loss=1.230176568031311>
2.1415 seconds
Tested. Sparse categorical accuracy: 85.00

round 11, metrics=<sparse_categorical_accuracy=0.6840000152587891,loss=1.1917104721069336>
2.2183 seconds
Tested. Sparse categorical accuracy: 78.33

round 12, metrics=<sparse_categorical_accuracy=0.7239999771118164,loss=0.9579890370368958>
2.1468 seconds
Tested. Sparse categorical accuracy: 66.67

round 13, metrics=<sparse_categorical_accuracy=0.7879999876022339,loss=0.6897710561752319>
2.0865 seconds
Tested. Sparse categorical accuracy: 82.50

round 14, metrics=<sparse_categorical_accuracy=0.8240000009536743,loss=0.6758732795715332>
2.2797 seconds
Tested. Sparse categorical accuracy: 88.33

round 15, metrics=<sparse_categorical_accuracy=0.8586666584014893,loss=0.49034544825553894>
2.0653 seconds
Tested. Sparse categorical accuracy: 95.00

round 16, metrics=<sparse_categorical_accuracy=0.8463333249092102,loss=0.5354574918746948>
2.0921 seconds
Tested. Sparse categorical accuracy: 88.33

round 17, metrics=<sparse_categorical_accuracy=0.8916666507720947,loss=0.36807653307914734>
2.2619 seconds
Tested. Sparse categorical accuracy: 98.33

round 18, metrics=<sparse_categorical_accuracy=0.8809999823570251,loss=0.40694957971572876>
2.0422 seconds
Tested. Sparse categorical accuracy: 86.67

round 19, metrics=<sparse_categorical_accuracy=0.9086666703224182,loss=0.310604989528656>
2.2788 seconds
Tested. Sparse categorical accuracy: 95.00

round 20, metrics=<sparse_categorical_accuracy=0.8956666588783264,loss=0.3496110141277313>
2.0812 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.9143333435058594,loss=0.28269410133361816>
2.0759 seconds
Tested. Sparse categorical accuracy: 86.67

round 22, metrics=<sparse_categorical_accuracy=0.9286666512489319,loss=0.24720419943332672>
2.2925 seconds
Tested. Sparse categorical accuracy: 83.33

round 23, metrics=<sparse_categorical_accuracy=0.9229999780654907,loss=0.2503330111503601>
2.0859 seconds
Tested. Sparse categorical accuracy: 91.67

round 24, metrics=<sparse_categorical_accuracy=0.9279999732971191,loss=0.22974316775798798>
2.0860 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
