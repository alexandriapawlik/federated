
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:18:04.039034: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  147
2020-07-15 23:18:03.556917

How often each label is chosen for non-IID data
[16, 18, 24, 30, 16, 25, 23, 15, 14, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14033333957195282,loss=2.2830817699432373>
5.7693 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.17233332991600037,loss=2.253410577774048>
4.2589 seconds
Tested. Sparse categorical accuracy: 40.00

round  3, metrics=<sparse_categorical_accuracy=0.27950000762939453,loss=2.249699354171753>
4.1721 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.3241666555404663,loss=2.128401279449463>
4.2255 seconds
Tested. Sparse categorical accuracy: 60.00

round  5, metrics=<sparse_categorical_accuracy=0.4410000145435333,loss=2.0625603199005127>
4.0673 seconds
Tested. Sparse categorical accuracy: 66.67

round  6, metrics=<sparse_categorical_accuracy=0.5303333401679993,loss=1.7095482349395752>
4.2162 seconds
Tested. Sparse categorical accuracy: 60.00

round  7, metrics=<sparse_categorical_accuracy=0.6666666865348816,loss=1.0990864038467407>
3.9942 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.7896666526794434,loss=0.684071958065033>
3.7929 seconds
Tested. Sparse categorical accuracy: 83.33

round  9, metrics=<sparse_categorical_accuracy=0.8433333039283752,loss=0.5294647812843323>
4.1746 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8481666445732117,loss=0.5161346197128296>
3.9821 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8989999890327454,loss=0.3387792706489563>
3.9445 seconds
Tested. Sparse categorical accuracy: 80.00

round 12, metrics=<sparse_categorical_accuracy=0.9164999723434448,loss=0.2865104675292969>
4.0017 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
