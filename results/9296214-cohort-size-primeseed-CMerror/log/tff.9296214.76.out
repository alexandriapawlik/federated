
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:10:49.817581: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  76
2020-07-15 23:10:49.323104

How often each label is chosen for non-IID data
[15, 22, 20, 20, 21, 26, 14, 25, 19, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11166666448116302,loss=2.302456855773926>
3.6352 seconds
Tested. Sparse categorical accuracy: 11.67

round  2, metrics=<sparse_categorical_accuracy=0.10566666722297668,loss=2.296478509902954>
2.7748 seconds
Tested. Sparse categorical accuracy: 20.00

round  3, metrics=<sparse_categorical_accuracy=0.1340000033378601,loss=2.288743734359741>
2.8477 seconds
Tested. Sparse categorical accuracy: 8.33

round  4, metrics=<sparse_categorical_accuracy=0.1509999930858612,loss=2.2662479877471924>
2.7129 seconds
Tested. Sparse categorical accuracy: 31.67

round  5, metrics=<sparse_categorical_accuracy=0.21799999475479126,loss=2.231670618057251>
2.6562 seconds
Tested. Sparse categorical accuracy: 28.33

round  6, metrics=<sparse_categorical_accuracy=0.25566667318344116,loss=2.1856250762939453>
2.5481 seconds
Tested. Sparse categorical accuracy: 55.00

round  7, metrics=<sparse_categorical_accuracy=0.3266666531562805,loss=2.208801031112671>
2.6329 seconds
Tested. Sparse categorical accuracy: 41.67

round  8, metrics=<sparse_categorical_accuracy=0.3986666798591614,loss=1.9499998092651367>
2.4678 seconds
Tested. Sparse categorical accuracy: 65.00

round  9, metrics=<sparse_categorical_accuracy=0.39100000262260437,loss=2.523674488067627>
2.4611 seconds
Tested. Sparse categorical accuracy: 20.00

round 10, metrics=<sparse_categorical_accuracy=0.25033333897590637,loss=2.2291512489318848>
2.9086 seconds
Tested. Sparse categorical accuracy: 31.67

round 11, metrics=<sparse_categorical_accuracy=0.31166666746139526,loss=2.0515799522399902>
2.5837 seconds
Tested. Sparse categorical accuracy: 50.00

round 12, metrics=<sparse_categorical_accuracy=0.46833333373069763,loss=2.047776699066162>
2.7482 seconds
Tested. Sparse categorical accuracy: 65.00

round 13, metrics=<sparse_categorical_accuracy=0.5303333401679993,loss=1.6386120319366455>
2.4884 seconds
Tested. Sparse categorical accuracy: 71.67

round 14, metrics=<sparse_categorical_accuracy=0.5989999771118164,loss=1.6955170631408691>
2.6713 seconds
Tested. Sparse categorical accuracy: 56.67

round 15, metrics=<sparse_categorical_accuracy=0.6233333349227905,loss=1.2571920156478882>
2.8242 seconds
Tested. Sparse categorical accuracy: 65.00

round 16, metrics=<sparse_categorical_accuracy=0.7070000171661377,loss=0.9934883713722229>
2.4162 seconds
Tested. Sparse categorical accuracy: 93.33

round 17, metrics=<sparse_categorical_accuracy=0.7480000257492065,loss=0.9189063906669617>
2.8257 seconds
Tested. Sparse categorical accuracy: 95.00

round 18, metrics=<sparse_categorical_accuracy=0.8080000281333923,loss=0.7253959774971008>
2.6343 seconds
Tested. Sparse categorical accuracy: 80.00

round 19, metrics=<sparse_categorical_accuracy=0.8316666483879089,loss=0.5617834329605103>
2.7132 seconds
Tested. Sparse categorical accuracy: 93.33

round 20, metrics=<sparse_categorical_accuracy=0.8306666612625122,loss=0.5424661636352539>
2.8468 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.8896666765213013,loss=0.3831135928630829>
2.6510 seconds
Tested. Sparse categorical accuracy: 100.00

round 22, metrics=<sparse_categorical_accuracy=0.9049999713897705,loss=0.32667306065559387>
2.6307 seconds
Tested. Sparse categorical accuracy: 91.67

round 23, metrics=<sparse_categorical_accuracy=0.8980000019073486,loss=0.34756913781166077>
2.7067 seconds
Tested. Sparse categorical accuracy: 98.33

round 24, metrics=<sparse_categorical_accuracy=0.9070000052452087,loss=0.3183863162994385>
2.5783 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
