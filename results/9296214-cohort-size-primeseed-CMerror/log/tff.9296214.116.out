
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:14:51.971279: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  116
2020-07-15 23:14:51.487900

How often each label is chosen for non-IID data
[20, 25, 18, 18, 23, 15, 20, 18, 18, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12066666781902313,loss=2.3006467819213867>
2.9591 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.11666666716337204,loss=2.2822623252868652>
2.1741 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.0976666659116745,loss=2.2571754455566406>
2.2215 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.34966665506362915,loss=2.1757962703704834>
2.0497 seconds
Tested. Sparse categorical accuracy: 38.33

round  5, metrics=<sparse_categorical_accuracy=0.3843333423137665,loss=2.497541666030884>
2.2047 seconds
Tested. Sparse categorical accuracy: 8.33

round  6, metrics=<sparse_categorical_accuracy=0.12866666913032532,loss=2.290121555328369>
2.0129 seconds
Tested. Sparse categorical accuracy: 10.00

round  7, metrics=<sparse_categorical_accuracy=0.15600000321865082,loss=2.26086688041687>
2.1810 seconds
Tested. Sparse categorical accuracy: 35.00

round  8, metrics=<sparse_categorical_accuracy=0.3176666796207428,loss=2.1747982501983643>
2.0361 seconds
Tested. Sparse categorical accuracy: 23.33

round  9, metrics=<sparse_categorical_accuracy=0.3373333215713501,loss=2.072941303253174>
2.1898 seconds
Tested. Sparse categorical accuracy: 56.67

round 10, metrics=<sparse_categorical_accuracy=0.4673333466053009,loss=2.009199619293213>
2.0358 seconds
Tested. Sparse categorical accuracy: 45.00

round 11, metrics=<sparse_categorical_accuracy=0.4883333444595337,loss=1.5815081596374512>
1.9921 seconds
Tested. Sparse categorical accuracy: 63.33

round 12, metrics=<sparse_categorical_accuracy=0.6103333234786987,loss=1.414775013923645>
2.1384 seconds
Tested. Sparse categorical accuracy: 66.67

round 13, metrics=<sparse_categorical_accuracy=0.7059999704360962,loss=1.0052169561386108>
2.0397 seconds
Tested. Sparse categorical accuracy: 75.00

round 14, metrics=<sparse_categorical_accuracy=0.7423333525657654,loss=0.9964751601219177>
2.1135 seconds
Tested. Sparse categorical accuracy: 80.00

round 15, metrics=<sparse_categorical_accuracy=0.79666668176651,loss=0.7146663665771484>
2.0176 seconds
Tested. Sparse categorical accuracy: 81.67

round 16, metrics=<sparse_categorical_accuracy=0.8603333234786987,loss=0.5108045339584351>
2.0100 seconds
Tested. Sparse categorical accuracy: 86.67

round 17, metrics=<sparse_categorical_accuracy=0.8016666769981384,loss=0.8018463253974915>
2.1191 seconds
Tested. Sparse categorical accuracy: 76.67

round 18, metrics=<sparse_categorical_accuracy=0.8479999899864197,loss=0.5101193189620972>
1.9929 seconds
Tested. Sparse categorical accuracy: 86.67

round 19, metrics=<sparse_categorical_accuracy=0.890666663646698,loss=0.3826456665992737>
1.9847 seconds
Tested. Sparse categorical accuracy: 96.67

round 20, metrics=<sparse_categorical_accuracy=0.8786666393280029,loss=0.41958895325660706>
2.1520 seconds
Tested. Sparse categorical accuracy: 91.67

round 21, metrics=<sparse_categorical_accuracy=0.8973333239555359,loss=0.35503047704696655>
1.9884 seconds
Tested. Sparse categorical accuracy: 98.33

round 22, metrics=<sparse_categorical_accuracy=0.9079999923706055,loss=0.3015540838241577>
1.9975 seconds
Tested. Sparse categorical accuracy: 93.33

round 23, metrics=<sparse_categorical_accuracy=0.9196666479110718,loss=0.2648707330226898>
2.1406 seconds
Tested. Sparse categorical accuracy: 93.33

round 24, metrics=<sparse_categorical_accuracy=0.9259999990463257,loss=0.23404325544834137>
2.0698 seconds
Tested. Sparse categorical accuracy: 88.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
