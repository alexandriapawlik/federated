
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:18:19.094844: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  152
2020-07-15 23:18:18.616682

How often each label is chosen for non-IID data
[20, 16, 24, 26, 20, 19, 15, 18, 20, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.156166672706604,loss=2.2802889347076416>
5.7796 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.20933333039283752,loss=2.2616477012634277>
4.2940 seconds
Tested. Sparse categorical accuracy: 63.33

round  3, metrics=<sparse_categorical_accuracy=0.31716665625572205,loss=2.3178155422210693>
4.3493 seconds
Tested. Sparse categorical accuracy: 10.00

round  4, metrics=<sparse_categorical_accuracy=0.16516666114330292,loss=2.272287130355835>
4.1526 seconds
Tested. Sparse categorical accuracy: 20.00

round  5, metrics=<sparse_categorical_accuracy=0.32483333349227905,loss=2.155679941177368>
4.2530 seconds
Tested. Sparse categorical accuracy: 60.00

round  6, metrics=<sparse_categorical_accuracy=0.4933333396911621,loss=1.8134281635284424>
4.2600 seconds
Tested. Sparse categorical accuracy: 46.67

round  7, metrics=<sparse_categorical_accuracy=0.6176666617393494,loss=1.3127105236053467>
3.9061 seconds
Tested. Sparse categorical accuracy: 66.67

round  8, metrics=<sparse_categorical_accuracy=0.7448333501815796,loss=0.8251022100448608>
4.0565 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.7773333191871643,loss=0.7728039026260376>
4.1460 seconds
Tested. Sparse categorical accuracy: 83.33

round 10, metrics=<sparse_categorical_accuracy=0.8651666641235352,loss=0.4749409258365631>
4.3425 seconds
Tested. Sparse categorical accuracy: 86.67

round 11, metrics=<sparse_categorical_accuracy=0.8821666836738586,loss=0.39915943145751953>
4.1298 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.8943333625793457,loss=0.34713640809059143>
4.2727 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
