
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:14:29.525625: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  112
2020-07-15 23:14:29.025470

How often each label is chosen for non-IID data
[18, 33, 22, 23, 20, 13, 17, 22, 17, 15]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1368333399295807,loss=2.289227247238159>
7.3679 seconds
Tested. Sparse categorical accuracy: 26.67

round  2, metrics=<sparse_categorical_accuracy=0.14399999380111694,loss=2.2624385356903076>
5.6958 seconds
Tested. Sparse categorical accuracy: 6.67

round  3, metrics=<sparse_categorical_accuracy=0.2318333387374878,loss=2.2230820655822754>
5.5417 seconds
Tested. Sparse categorical accuracy: 60.00

round  4, metrics=<sparse_categorical_accuracy=0.47483333945274353,loss=2.0239646434783936>
5.3390 seconds
Tested. Sparse categorical accuracy: 50.00

round  5, metrics=<sparse_categorical_accuracy=0.4808333218097687,loss=1.9580914974212646>
5.9223 seconds
Tested. Sparse categorical accuracy: 60.00

round  6, metrics=<sparse_categorical_accuracy=0.6370000243186951,loss=1.2401950359344482>
5.8378 seconds
Tested. Sparse categorical accuracy: 63.33

round  7, metrics=<sparse_categorical_accuracy=0.7163333296775818,loss=0.9706121683120728>
5.7913 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8059999942779541,loss=0.664445161819458>
4.9720 seconds
Tested. Sparse categorical accuracy: 90.00

round  9, metrics=<sparse_categorical_accuracy=0.8479999899864197,loss=0.5105988383293152>
5.2667 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8921666741371155,loss=0.35770323872566223>
5.7498 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.9038333296775818,loss=0.3124741315841675>
5.8915 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.925166666507721,loss=0.24708189070224762>
5.3477 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
