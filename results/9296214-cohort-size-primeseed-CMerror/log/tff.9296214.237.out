
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:27:02.974868: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  237
2020-07-15 23:27:02.488141

How often each label is chosen for non-IID data
[17, 17, 16, 24, 25, 14, 23, 23, 19, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10966666787862778,loss=2.27700138092041>
6.1926 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.11800000071525574,loss=2.2345197200775146>
4.8366 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.382999986410141,loss=2.171861410140991>
4.7134 seconds
Tested. Sparse categorical accuracy: 80.00

round  4, metrics=<sparse_categorical_accuracy=0.5220000147819519,loss=2.032104730606079>
4.5674 seconds
Tested. Sparse categorical accuracy: 70.00

round  5, metrics=<sparse_categorical_accuracy=0.5961666703224182,loss=1.5454645156860352>
4.4818 seconds
Tested. Sparse categorical accuracy: 60.00

round  6, metrics=<sparse_categorical_accuracy=0.6896666884422302,loss=1.0406677722930908>
4.4418 seconds
Tested. Sparse categorical accuracy: 93.33

round  7, metrics=<sparse_categorical_accuracy=0.7573333382606506,loss=0.8389772772789001>
4.3815 seconds
Tested. Sparse categorical accuracy: 90.00

round  8, metrics=<sparse_categorical_accuracy=0.8303333520889282,loss=0.6032566428184509>
4.3868 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8721666932106018,loss=0.4595567286014557>
4.5394 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.887333333492279,loss=0.40103620290756226>
4.6229 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.9128333330154419,loss=0.29197579622268677>
4.4815 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.9283333420753479,loss=0.2447393834590912>
4.6220 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
