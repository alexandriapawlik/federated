
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:51:15.588406: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  467
2020-07-15 23:51:15.107605

How often each label is chosen for non-IID data
[15, 23, 17, 17, 24, 17, 24, 24, 26, 13]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15800000727176666,loss=2.2848031520843506>
5.5584 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.21116666495800018,loss=2.2537567615509033>
4.2481 seconds
Tested. Sparse categorical accuracy: 46.67

round  3, metrics=<sparse_categorical_accuracy=0.335833340883255,loss=2.1307332515716553>
4.2857 seconds
Tested. Sparse categorical accuracy: 53.33

round  4, metrics=<sparse_categorical_accuracy=0.35983332991600037,loss=2.192228317260742>
4.0149 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.531166672706604,loss=1.642261266708374>
4.1459 seconds
Tested. Sparse categorical accuracy: 66.67

round  6, metrics=<sparse_categorical_accuracy=0.5896666646003723,loss=1.496833324432373>
4.2759 seconds
Tested. Sparse categorical accuracy: 70.00

round  7, metrics=<sparse_categorical_accuracy=0.7128333449363708,loss=0.9841393828392029>
4.1117 seconds
Tested. Sparse categorical accuracy: 93.33

round  8, metrics=<sparse_categorical_accuracy=0.8086666464805603,loss=0.6593138575553894>
3.9950 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8493333458900452,loss=0.5055601596832275>
4.0549 seconds
Tested. Sparse categorical accuracy: 96.67

round 10, metrics=<sparse_categorical_accuracy=0.8926666378974915,loss=0.36277857422828674>
4.0690 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.878333330154419,loss=0.44112956523895264>
3.9914 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.9173333048820496,loss=0.2897566854953766>
4.1498 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
