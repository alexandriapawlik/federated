
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:30:02.369707: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  267
2020-07-15 23:30:01.885828

How often each label is chosen for non-IID data
[17, 33, 11, 17, 15, 23, 19, 25, 18, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13466666638851166,loss=2.2854719161987305>
6.1661 seconds
Tested. Sparse categorical accuracy: 43.33

round  2, metrics=<sparse_categorical_accuracy=0.20116665959358215,loss=2.2432284355163574>
4.3883 seconds
Tested. Sparse categorical accuracy: 56.67

round  3, metrics=<sparse_categorical_accuracy=0.28433331847190857,loss=2.2642769813537598>
4.6345 seconds
Tested. Sparse categorical accuracy: 23.33

round  4, metrics=<sparse_categorical_accuracy=0.3230000138282776,loss=2.113959550857544>
4.3598 seconds
Tested. Sparse categorical accuracy: 60.00

round  5, metrics=<sparse_categorical_accuracy=0.46566668152809143,loss=1.9228096008300781>
4.3469 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.5674999952316284,loss=1.619275689125061>
4.2839 seconds
Tested. Sparse categorical accuracy: 60.00

round  7, metrics=<sparse_categorical_accuracy=0.6991666555404663,loss=1.0279929637908936>
4.1752 seconds
Tested. Sparse categorical accuracy: 73.33

round  8, metrics=<sparse_categorical_accuracy=0.8116666674613953,loss=0.6460326313972473>
4.1573 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8721666932106018,loss=0.44071125984191895>
4.2252 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.862333357334137,loss=0.45749834179878235>
4.1578 seconds
Tested. Sparse categorical accuracy: 86.67

round 11, metrics=<sparse_categorical_accuracy=0.8960000276565552,loss=0.3653087615966797>
4.0209 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.903166651725769,loss=0.3217410147190094>
4.3297 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
