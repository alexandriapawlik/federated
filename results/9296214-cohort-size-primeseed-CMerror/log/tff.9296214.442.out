
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:48:38.898209: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  442
2020-07-15 23:48:38.415271

How often each label is chosen for non-IID data
[23, 17, 22, 25, 23, 16, 19, 24, 18, 13]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1496666669845581,loss=2.2873969078063965>
5.9326 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.16366666555404663,loss=2.2461843490600586>
4.3022 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.27149999141693115,loss=2.1634671688079834>
4.3164 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.38366666436195374,loss=1.9972703456878662>
4.1394 seconds
Tested. Sparse categorical accuracy: 53.33

round  5, metrics=<sparse_categorical_accuracy=0.4169999957084656,loss=1.9773014783859253>
4.2296 seconds
Tested. Sparse categorical accuracy: 63.33

round  6, metrics=<sparse_categorical_accuracy=0.5886666774749756,loss=1.391568899154663>
4.3326 seconds
Tested. Sparse categorical accuracy: 60.00

round  7, metrics=<sparse_categorical_accuracy=0.6489999890327454,loss=1.297359585762024>
3.9740 seconds
Tested. Sparse categorical accuracy: 73.33

round  8, metrics=<sparse_categorical_accuracy=0.7606666684150696,loss=0.7873746156692505>
4.4677 seconds
Tested. Sparse categorical accuracy: 100.00

round  9, metrics=<sparse_categorical_accuracy=0.8331666588783264,loss=0.5659199357032776>
4.2368 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8565000295639038,loss=0.4911856949329376>
4.1734 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8891666531562805,loss=0.38481277227401733>
4.1750 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9043333530426025,loss=0.2941281199455261>
4.0091 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
