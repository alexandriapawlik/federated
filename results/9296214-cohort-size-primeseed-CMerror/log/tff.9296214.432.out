
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:47:36.176558: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  432
2020-07-15 23:47:35.637227

How often each label is chosen for non-IID data
[19, 20, 23, 19, 24, 21, 23, 19, 20, 12]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13466666638851166,loss=2.2876195907592773>
7.6478 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.1550000011920929,loss=2.25311541557312>
5.8658 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.23250000178813934,loss=2.2772276401519775>
5.3414 seconds
Tested. Sparse categorical accuracy: 33.33

round  4, metrics=<sparse_categorical_accuracy=0.3283333480358124,loss=2.1474857330322266>
5.5956 seconds
Tested. Sparse categorical accuracy: 66.67

round  5, metrics=<sparse_categorical_accuracy=0.4359999895095825,loss=2.0753908157348633>
5.5049 seconds
Tested. Sparse categorical accuracy: 70.00

round  6, metrics=<sparse_categorical_accuracy=0.6243333220481873,loss=1.6330639123916626>
5.4971 seconds
Tested. Sparse categorical accuracy: 70.00

round  7, metrics=<sparse_categorical_accuracy=0.6903333067893982,loss=1.1772921085357666>
5.7739 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.7851666808128357,loss=0.736003577709198>
5.3601 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8044999837875366,loss=0.6878534555435181>
5.4960 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8693333268165588,loss=0.45994889736175537>
5.8327 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8898333311080933,loss=0.3686225712299347>
5.3681 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9176666736602783,loss=0.2738843858242035>
5.6001 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
