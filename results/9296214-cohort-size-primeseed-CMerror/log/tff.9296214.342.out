
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:38:18.542482: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  342
2020-07-15 23:38:18.056211

How often each label is chosen for non-IID data
[27, 15, 18, 18, 19, 20, 19, 20, 19, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.140666663646698,loss=2.2837743759155273>
5.8067 seconds
Tested. Sparse categorical accuracy: 30.00

round  2, metrics=<sparse_categorical_accuracy=0.1991666704416275,loss=2.2438950538635254>
4.4360 seconds
Tested. Sparse categorical accuracy: 43.33

round  3, metrics=<sparse_categorical_accuracy=0.3264999985694885,loss=2.1760964393615723>
4.1178 seconds
Tested. Sparse categorical accuracy: 40.00

round  4, metrics=<sparse_categorical_accuracy=0.35216665267944336,loss=2.13932466506958>
4.3435 seconds
Tested. Sparse categorical accuracy: 13.33

round  5, metrics=<sparse_categorical_accuracy=0.43433332443237305,loss=1.779021978378296>
4.2406 seconds
Tested. Sparse categorical accuracy: 73.33

round  6, metrics=<sparse_categorical_accuracy=0.5586666464805603,loss=1.5624514818191528>
4.2748 seconds
Tested. Sparse categorical accuracy: 73.33

round  7, metrics=<sparse_categorical_accuracy=0.7151666879653931,loss=0.8991902470588684>
4.3123 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8209999799728394,loss=0.5777524709701538>
4.0594 seconds
Tested. Sparse categorical accuracy: 73.33

round  9, metrics=<sparse_categorical_accuracy=0.8328333497047424,loss=0.5768766403198242>
4.1977 seconds
Tested. Sparse categorical accuracy: 76.67

round 10, metrics=<sparse_categorical_accuracy=0.8851666450500488,loss=0.3714914619922638>
4.2329 seconds
Tested. Sparse categorical accuracy: 83.33

round 11, metrics=<sparse_categorical_accuracy=0.8893333077430725,loss=0.3620742857456207>
3.9623 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.9103333353996277,loss=0.2913591265678406>
4.1964 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
