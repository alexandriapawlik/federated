
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:47:00.143640: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  426
2020-07-15 23:46:59.662143

How often each label is chosen for non-IID data
[21, 17, 18, 18, 19, 17, 26, 19, 18, 27]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09866666793823242,loss=2.303873062133789>
2.9719 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.10833333432674408,loss=2.2963473796844482>
2.1276 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.10300000011920929,loss=2.2914485931396484>
2.1947 seconds
Tested. Sparse categorical accuracy: 21.67

round  4, metrics=<sparse_categorical_accuracy=0.10166666656732559,loss=2.2739620208740234>
2.0806 seconds
Tested. Sparse categorical accuracy: 21.67

round  5, metrics=<sparse_categorical_accuracy=0.18000000715255737,loss=2.2227494716644287>
2.2251 seconds
Tested. Sparse categorical accuracy: 25.00

round  6, metrics=<sparse_categorical_accuracy=0.29366666078567505,loss=2.163210868835449>
2.0450 seconds
Tested. Sparse categorical accuracy: 65.00

round  7, metrics=<sparse_categorical_accuracy=0.4466666579246521,loss=2.1398937702178955>
2.2182 seconds
Tested. Sparse categorical accuracy: 13.33

round  8, metrics=<sparse_categorical_accuracy=0.3319999873638153,loss=1.9409294128417969>
2.0324 seconds
Tested. Sparse categorical accuracy: 65.00

round  9, metrics=<sparse_categorical_accuracy=0.46533334255218506,loss=2.0275142192840576>
2.0445 seconds
Tested. Sparse categorical accuracy: 40.00

round 10, metrics=<sparse_categorical_accuracy=0.40833333134651184,loss=1.9501597881317139>
2.1470 seconds
Tested. Sparse categorical accuracy: 58.33

round 11, metrics=<sparse_categorical_accuracy=0.6269999742507935,loss=1.3436285257339478>
2.0596 seconds
Tested. Sparse categorical accuracy: 63.33

round 12, metrics=<sparse_categorical_accuracy=0.6586666703224182,loss=1.3889058828353882>
2.1892 seconds
Tested. Sparse categorical accuracy: 51.67

round 13, metrics=<sparse_categorical_accuracy=0.6980000138282776,loss=1.062342882156372>
2.0253 seconds
Tested. Sparse categorical accuracy: 88.33

round 14, metrics=<sparse_categorical_accuracy=0.7720000147819519,loss=0.7918340563774109>
2.0261 seconds
Tested. Sparse categorical accuracy: 85.00

round 15, metrics=<sparse_categorical_accuracy=0.7263333201408386,loss=0.9096247553825378>
2.1391 seconds
Tested. Sparse categorical accuracy: 83.33

round 16, metrics=<sparse_categorical_accuracy=0.7983333468437195,loss=0.7300811409950256>
2.0290 seconds
Tested. Sparse categorical accuracy: 81.67

round 17, metrics=<sparse_categorical_accuracy=0.8529999852180481,loss=0.4810105860233307>
2.1682 seconds
Tested. Sparse categorical accuracy: 90.00

round 18, metrics=<sparse_categorical_accuracy=0.8920000195503235,loss=0.41246721148490906>
2.0455 seconds
Tested. Sparse categorical accuracy: 88.33

round 19, metrics=<sparse_categorical_accuracy=0.8989999890327454,loss=0.35856470465660095>
1.9896 seconds
Tested. Sparse categorical accuracy: 93.33

round 20, metrics=<sparse_categorical_accuracy=0.8859999775886536,loss=0.3617009222507477>
2.2188 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.9103333353996277,loss=0.305614173412323>
2.0157 seconds
Tested. Sparse categorical accuracy: 98.33

round 22, metrics=<sparse_categorical_accuracy=0.9190000295639038,loss=0.25691303610801697>
2.0191 seconds
Tested. Sparse categorical accuracy: 90.00

round 23, metrics=<sparse_categorical_accuracy=0.9133333563804626,loss=0.2995848059654236>
2.2168 seconds
Tested. Sparse categorical accuracy: 100.00

round 24, metrics=<sparse_categorical_accuracy=0.9210000038146973,loss=0.25195571780204773>
2.0014 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
