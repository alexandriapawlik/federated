
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:22:08.379731: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  191
2020-07-15 23:22:07.839775

How often each label is chosen for non-IID data
[23, 19, 26, 22, 15, 22, 16, 20, 12, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09366666525602341,loss=2.303833484649658>
4.1733 seconds
Tested. Sparse categorical accuracy: 18.33

round  2, metrics=<sparse_categorical_accuracy=0.10566666722297668,loss=2.2889745235443115>
2.8365 seconds
Tested. Sparse categorical accuracy: 35.00

round  3, metrics=<sparse_categorical_accuracy=0.1653333306312561,loss=2.2780165672302246>
2.8042 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.11433333158493042,loss=2.2508749961853027>
2.8578 seconds
Tested. Sparse categorical accuracy: 36.67

round  5, metrics=<sparse_categorical_accuracy=0.17599999904632568,loss=2.1770739555358887>
3.3032 seconds
Tested. Sparse categorical accuracy: 48.33

round  6, metrics=<sparse_categorical_accuracy=0.3100000023841858,loss=2.0956342220306396>
2.7999 seconds
Tested. Sparse categorical accuracy: 55.00

round  7, metrics=<sparse_categorical_accuracy=0.29899999499320984,loss=2.554032564163208>
2.8446 seconds
Tested. Sparse categorical accuracy: 15.00

round  8, metrics=<sparse_categorical_accuracy=0.1616666615009308,loss=2.282414436340332>
2.7609 seconds
Tested. Sparse categorical accuracy: 28.33

round  9, metrics=<sparse_categorical_accuracy=0.24266666173934937,loss=2.234302043914795>
2.9286 seconds
Tested. Sparse categorical accuracy: 28.33

round 10, metrics=<sparse_categorical_accuracy=0.34599998593330383,loss=2.0461502075195312>
2.9258 seconds
Tested. Sparse categorical accuracy: 50.00

round 11, metrics=<sparse_categorical_accuracy=0.4176666736602783,loss=2.296994924545288>
2.9134 seconds
Tested. Sparse categorical accuracy: 25.00

round 12, metrics=<sparse_categorical_accuracy=0.3713333308696747,loss=1.9214565753936768>
3.3070 seconds
Tested. Sparse categorical accuracy: 60.00

round 13, metrics=<sparse_categorical_accuracy=0.5680000185966492,loss=1.5399633646011353>
2.6641 seconds
Tested. Sparse categorical accuracy: 71.67

round 14, metrics=<sparse_categorical_accuracy=0.6340000033378601,loss=1.372700572013855>
2.8930 seconds
Tested. Sparse categorical accuracy: 70.00

round 15, metrics=<sparse_categorical_accuracy=0.6666666865348816,loss=1.0666213035583496>
2.8599 seconds
Tested. Sparse categorical accuracy: 90.00

round 16, metrics=<sparse_categorical_accuracy=0.737333357334137,loss=0.8834418654441833>
2.9750 seconds
Tested. Sparse categorical accuracy: 91.67

round 17, metrics=<sparse_categorical_accuracy=0.8023333549499512,loss=0.6816082000732422>
3.1014 seconds
Tested. Sparse categorical accuracy: 85.00

round 18, metrics=<sparse_categorical_accuracy=0.8066666722297668,loss=0.6482283473014832>
2.9788 seconds
Tested. Sparse categorical accuracy: 96.67

round 19, metrics=<sparse_categorical_accuracy=0.8336666822433472,loss=0.5804588198661804>
3.3023 seconds
Tested. Sparse categorical accuracy: 83.33

round 20, metrics=<sparse_categorical_accuracy=0.8690000176429749,loss=0.4465165138244629>
2.9799 seconds
Tested. Sparse categorical accuracy: 81.67

round 21, metrics=<sparse_categorical_accuracy=0.874666690826416,loss=0.42279231548309326>
2.7672 seconds
Tested. Sparse categorical accuracy: 96.67

round 22, metrics=<sparse_categorical_accuracy=0.8853333592414856,loss=0.3758828639984131>
2.9544 seconds
Tested. Sparse categorical accuracy: 81.67

round 23, metrics=<sparse_categorical_accuracy=0.8926666378974915,loss=0.3666023910045624>
3.2134 seconds
Tested. Sparse categorical accuracy: 100.00

round 24, metrics=<sparse_categorical_accuracy=0.9203333258628845,loss=0.25284868478775024>
2.9971 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
