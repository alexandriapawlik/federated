
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:24:58.038745: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  217
2020-07-15 23:24:57.550755

How often each label is chosen for non-IID data
[22, 22, 16, 16, 25, 20, 21, 25, 16, 17]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11249999701976776,loss=2.2886552810668945>
5.9975 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.1326666623353958,loss=2.25175142288208>
4.4011 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.2985000014305115,loss=2.16762375831604>
4.2768 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.4221666753292084,loss=1.86985445022583>
4.4243 seconds
Tested. Sparse categorical accuracy: 73.33

round  5, metrics=<sparse_categorical_accuracy=0.4086666703224182,loss=2.078758716583252>
4.1806 seconds
Tested. Sparse categorical accuracy: 36.67

round  6, metrics=<sparse_categorical_accuracy=0.565666675567627,loss=1.4627317190170288>
4.1440 seconds
Tested. Sparse categorical accuracy: 80.00

round  7, metrics=<sparse_categorical_accuracy=0.6313333511352539,loss=1.3732831478118896>
4.3140 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.7639999985694885,loss=0.7926426529884338>
4.0890 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8331666588783264,loss=0.6007285714149475>
4.1823 seconds
Tested. Sparse categorical accuracy: 80.00

round 10, metrics=<sparse_categorical_accuracy=0.862500011920929,loss=0.4717303514480591>
4.3651 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8964999914169312,loss=0.3560233414173126>
3.9804 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9146666526794434,loss=0.2929854691028595>
4.1427 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
