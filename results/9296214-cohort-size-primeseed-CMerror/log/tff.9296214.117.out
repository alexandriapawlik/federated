
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:14:54.247181: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  117
2020-07-15 23:14:53.762401

How often each label is chosen for non-IID data
[20, 25, 18, 18, 23, 15, 20, 18, 18, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13583333790302277,loss=2.2837445735931396>
5.6502 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.14666666090488434,loss=2.2514569759368896>
4.3019 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.24566666781902313,loss=2.207502841949463>
4.1004 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.43716666102409363,loss=2.1679842472076416>
3.9932 seconds
Tested. Sparse categorical accuracy: 26.67

round  5, metrics=<sparse_categorical_accuracy=0.4151666760444641,loss=1.9735589027404785>
4.0408 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.5960000157356262,loss=1.2776893377304077>
4.1663 seconds
Tested. Sparse categorical accuracy: 60.00

round  7, metrics=<sparse_categorical_accuracy=0.7378333210945129,loss=0.8601750731468201>
4.0078 seconds
Tested. Sparse categorical accuracy: 93.33

round  8, metrics=<sparse_categorical_accuracy=0.8143333196640015,loss=0.6281034350395203>
4.1012 seconds
Tested. Sparse categorical accuracy: 80.00

round  9, metrics=<sparse_categorical_accuracy=0.8289999961853027,loss=0.5702752470970154>
4.1374 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.9016666412353516,loss=0.3399866223335266>
4.1474 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8989999890327454,loss=0.3315941095352173>
3.8508 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9076666831970215,loss=0.32964807748794556>
4.2605 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
