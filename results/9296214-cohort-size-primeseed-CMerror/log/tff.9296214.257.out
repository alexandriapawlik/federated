
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:28:57.636625: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  257
2020-07-15 23:28:57.138358

How often each label is chosen for non-IID data
[16, 18, 13, 18, 25, 26, 19, 26, 22, 17]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15649999678134918,loss=2.281562566757202>
6.5370 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.21833333373069763,loss=2.2436280250549316>
5.2595 seconds
Tested. Sparse categorical accuracy: 23.33

round  3, metrics=<sparse_categorical_accuracy=0.26249998807907104,loss=2.3677613735198975>
5.3143 seconds
Tested. Sparse categorical accuracy: 16.67

round  4, metrics=<sparse_categorical_accuracy=0.16433332860469818,loss=2.2719528675079346>
5.2826 seconds
Tested. Sparse categorical accuracy: 23.33

round  5, metrics=<sparse_categorical_accuracy=0.29233333468437195,loss=2.1580350399017334>
5.0431 seconds
Tested. Sparse categorical accuracy: 33.33

round  6, metrics=<sparse_categorical_accuracy=0.3851666748523712,loss=2.122661590576172>
5.1502 seconds
Tested. Sparse categorical accuracy: 30.00

round  7, metrics=<sparse_categorical_accuracy=0.4543333351612091,loss=1.7470628023147583>
5.0710 seconds
Tested. Sparse categorical accuracy: 50.00

round  8, metrics=<sparse_categorical_accuracy=0.624833345413208,loss=1.2676101922988892>
4.8988 seconds
Tested. Sparse categorical accuracy: 80.00

round  9, metrics=<sparse_categorical_accuracy=0.7423333525657654,loss=0.8264999389648438>
5.1145 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.7891666889190674,loss=0.7156065106391907>
5.1577 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.8461666703224182,loss=0.5080486536026001>
5.2155 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.8961666822433472,loss=0.35417798161506653>
4.4346 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
