
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:31:43.601134: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  282
2020-07-15 23:31:43.107456

How often each label is chosen for non-IID data
[23, 24, 17, 23, 17, 18, 24, 20, 15, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12833333015441895,loss=2.2862610816955566>
5.8044 seconds
Tested. Sparse categorical accuracy: 3.33

round  2, metrics=<sparse_categorical_accuracy=0.1770000010728836,loss=2.266247510910034>
4.2970 seconds
Tested. Sparse categorical accuracy: 66.67

round  3, metrics=<sparse_categorical_accuracy=0.3661666810512543,loss=2.2077245712280273>
4.2038 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.4086666703224182,loss=2.123797655105591>
4.3667 seconds
Tested. Sparse categorical accuracy: 43.33

round  5, metrics=<sparse_categorical_accuracy=0.546500027179718,loss=1.7349162101745605>
4.3354 seconds
Tested. Sparse categorical accuracy: 80.00

round  6, metrics=<sparse_categorical_accuracy=0.6308333277702332,loss=1.3436216115951538>
4.2902 seconds
Tested. Sparse categorical accuracy: 53.33

round  7, metrics=<sparse_categorical_accuracy=0.7208333611488342,loss=0.9677852392196655>
4.2254 seconds
Tested. Sparse categorical accuracy: 70.00

round  8, metrics=<sparse_categorical_accuracy=0.8338333368301392,loss=0.5922821760177612>
4.1120 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8683333396911621,loss=0.4469609260559082>
4.2381 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8793333172798157,loss=0.42501696944236755>
4.2894 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8985000252723694,loss=0.33029070496559143>
4.0329 seconds
Tested. Sparse categorical accuracy: 83.33

round 12, metrics=<sparse_categorical_accuracy=0.9056666493415833,loss=0.3116797208786011>
4.2420 seconds
Tested. Sparse categorical accuracy: 83.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
