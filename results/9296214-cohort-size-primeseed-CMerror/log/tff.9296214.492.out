
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:53:57.545988: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  492
2020-07-15 23:53:57.062032

How often each label is chosen for non-IID data
[17, 21, 13, 22, 19, 22, 25, 19, 17, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09233333170413971,loss=2.2835566997528076>
6.1112 seconds
Tested. Sparse categorical accuracy: 3.33

round  2, metrics=<sparse_categorical_accuracy=0.14016667008399963,loss=2.2531042098999023>
4.3331 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.23383332788944244,loss=2.2244644165039062>
4.3453 seconds
Tested. Sparse categorical accuracy: 30.00

round  4, metrics=<sparse_categorical_accuracy=0.4048333466053009,loss=2.1071970462799072>
4.3628 seconds
Tested. Sparse categorical accuracy: 63.33

round  5, metrics=<sparse_categorical_accuracy=0.4598333239555359,loss=1.908695101737976>
4.1949 seconds
Tested. Sparse categorical accuracy: 73.33

round  6, metrics=<sparse_categorical_accuracy=0.6196666955947876,loss=1.522295355796814>
4.3246 seconds
Tested. Sparse categorical accuracy: 46.67

round  7, metrics=<sparse_categorical_accuracy=0.687666654586792,loss=1.0177130699157715>
4.1944 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.7889999747276306,loss=0.7258085012435913>
4.0343 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8518333435058594,loss=0.4903182089328766>
4.2745 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.871833324432373,loss=0.4324888586997986>
4.3622 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8921666741371155,loss=0.3598126173019409>
4.1702 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9263333082199097,loss=0.22997908294200897>
4.4143 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
