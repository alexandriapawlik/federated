
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:32:50.510470: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  291
2020-07-15 23:32:50.019657

How often each label is chosen for non-IID data
[20, 15, 18, 17, 27, 19, 24, 21, 25, 14]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10966666787862778,loss=2.3017640113830566>
2.9755 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.10599999874830246,loss=2.2846179008483887>
2.2588 seconds
Tested. Sparse categorical accuracy: 8.33

round  3, metrics=<sparse_categorical_accuracy=0.09366666525602341,loss=2.279115915298462>
2.2820 seconds
Tested. Sparse categorical accuracy: 25.00

round  4, metrics=<sparse_categorical_accuracy=0.1770000010728836,loss=2.233976125717163>
2.2365 seconds
Tested. Sparse categorical accuracy: 41.67

round  5, metrics=<sparse_categorical_accuracy=0.3083333373069763,loss=2.181361675262451>
2.3744 seconds
Tested. Sparse categorical accuracy: 35.00

round  6, metrics=<sparse_categorical_accuracy=0.34700000286102295,loss=2.4061686992645264>
2.1415 seconds
Tested. Sparse categorical accuracy: 23.33

round  7, metrics=<sparse_categorical_accuracy=0.2409999966621399,loss=2.260679244995117>
2.2902 seconds
Tested. Sparse categorical accuracy: 16.67

round  8, metrics=<sparse_categorical_accuracy=0.2836666703224182,loss=2.1981735229492188>
2.1374 seconds
Tested. Sparse categorical accuracy: 35.00

round  9, metrics=<sparse_categorical_accuracy=0.4256666600704193,loss=1.909440279006958>
2.0910 seconds
Tested. Sparse categorical accuracy: 40.00

round 10, metrics=<sparse_categorical_accuracy=0.47200000286102295,loss=2.040555238723755>
2.3168 seconds
Tested. Sparse categorical accuracy: 26.67

round 11, metrics=<sparse_categorical_accuracy=0.3243333399295807,loss=2.1618783473968506>
2.2207 seconds
Tested. Sparse categorical accuracy: 48.33

round 12, metrics=<sparse_categorical_accuracy=0.45266667008399963,loss=1.835429072380066>
2.3664 seconds
Tested. Sparse categorical accuracy: 63.33

round 13, metrics=<sparse_categorical_accuracy=0.5736666917800903,loss=1.4450737237930298>
2.0991 seconds
Tested. Sparse categorical accuracy: 76.67

round 14, metrics=<sparse_categorical_accuracy=0.6940000057220459,loss=1.173275351524353>
2.2201 seconds
Tested. Sparse categorical accuracy: 73.33

round 15, metrics=<sparse_categorical_accuracy=0.7633333206176758,loss=0.9069432616233826>
2.1281 seconds
Tested. Sparse categorical accuracy: 81.67

round 16, metrics=<sparse_categorical_accuracy=0.8100000023841858,loss=0.7159191370010376>
2.1580 seconds
Tested. Sparse categorical accuracy: 95.00

round 17, metrics=<sparse_categorical_accuracy=0.8629999756813049,loss=0.4823963940143585>
2.2663 seconds
Tested. Sparse categorical accuracy: 78.33

round 18, metrics=<sparse_categorical_accuracy=0.8243333101272583,loss=0.681675136089325>
2.0606 seconds
Tested. Sparse categorical accuracy: 78.33

round 19, metrics=<sparse_categorical_accuracy=0.8363333344459534,loss=0.6314221024513245>
2.1997 seconds
Tested. Sparse categorical accuracy: 86.67

round 20, metrics=<sparse_categorical_accuracy=0.874666690826416,loss=0.43667536973953247>
2.2907 seconds
Tested. Sparse categorical accuracy: 96.67

round 21, metrics=<sparse_categorical_accuracy=0.9196666479110718,loss=0.2828214168548584>
2.1847 seconds
Tested. Sparse categorical accuracy: 95.00

round 22, metrics=<sparse_categorical_accuracy=0.9076666831970215,loss=0.30501553416252136>
2.2981 seconds
Tested. Sparse categorical accuracy: 96.67

round 23, metrics=<sparse_categorical_accuracy=0.925000011920929,loss=0.27009180188179016>
2.1738 seconds
Tested. Sparse categorical accuracy: 88.33

round 24, metrics=<sparse_categorical_accuracy=0.909333348274231,loss=0.2956623435020447>
2.1623 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
