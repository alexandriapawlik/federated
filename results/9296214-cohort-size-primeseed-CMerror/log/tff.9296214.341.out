
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:38:16.117927: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  341
2020-07-15 23:38:15.570595

How often each label is chosen for non-IID data
[27, 15, 18, 18, 19, 20, 19, 20, 19, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11533333361148834,loss=2.3009607791900635>
5.7508 seconds
Tested. Sparse categorical accuracy: 8.33

round  2, metrics=<sparse_categorical_accuracy=0.14266666769981384,loss=2.2958879470825195>
2.9087 seconds
Tested. Sparse categorical accuracy: 36.67

round  3, metrics=<sparse_categorical_accuracy=0.1509999930858612,loss=2.2825305461883545>
3.1710 seconds
Tested. Sparse categorical accuracy: 38.33

round  4, metrics=<sparse_categorical_accuracy=0.20100000500679016,loss=2.2584166526794434>
2.8284 seconds
Tested. Sparse categorical accuracy: 20.00

round  5, metrics=<sparse_categorical_accuracy=0.17533333599567413,loss=2.216304063796997>
3.2198 seconds
Tested. Sparse categorical accuracy: 33.33

round  6, metrics=<sparse_categorical_accuracy=0.28733333945274353,loss=2.1376237869262695>
3.1570 seconds
Tested. Sparse categorical accuracy: 68.33

round  7, metrics=<sparse_categorical_accuracy=0.38866665959358215,loss=2.116830825805664>
2.8565 seconds
Tested. Sparse categorical accuracy: 58.33

round  8, metrics=<sparse_categorical_accuracy=0.45100000500679016,loss=1.9558970928192139>
3.1986 seconds
Tested. Sparse categorical accuracy: 55.00

round  9, metrics=<sparse_categorical_accuracy=0.5329999923706055,loss=1.5952688455581665>
3.1113 seconds
Tested. Sparse categorical accuracy: 70.00

round 10, metrics=<sparse_categorical_accuracy=0.5956666469573975,loss=1.5290740728378296>
2.6854 seconds
Tested. Sparse categorical accuracy: 63.33

round 11, metrics=<sparse_categorical_accuracy=0.6233333349227905,loss=1.1739418506622314>
3.2049 seconds
Tested. Sparse categorical accuracy: 85.00

round 12, metrics=<sparse_categorical_accuracy=0.6826666593551636,loss=1.1537929773330688>
2.9322 seconds
Tested. Sparse categorical accuracy: 68.33

round 13, metrics=<sparse_categorical_accuracy=0.7689999938011169,loss=0.731033205986023>
2.9391 seconds
Tested. Sparse categorical accuracy: 86.67

round 14, metrics=<sparse_categorical_accuracy=0.7793333530426025,loss=0.7771434187889099>
3.3981 seconds
Tested. Sparse categorical accuracy: 80.00

round 15, metrics=<sparse_categorical_accuracy=0.8176666498184204,loss=0.5802093744277954>
3.0755 seconds
Tested. Sparse categorical accuracy: 93.33

round 16, metrics=<sparse_categorical_accuracy=0.8970000147819519,loss=0.35048526525497437>
2.8219 seconds
Tested. Sparse categorical accuracy: 98.33

round 17, metrics=<sparse_categorical_accuracy=0.8733333349227905,loss=0.40699872374534607>
2.9818 seconds
Tested. Sparse categorical accuracy: 96.67

round 18, metrics=<sparse_categorical_accuracy=0.8866666555404663,loss=0.3838772773742676>
2.9338 seconds
Tested. Sparse categorical accuracy: 86.67

round 19, metrics=<sparse_categorical_accuracy=0.9079999923706055,loss=0.31456831097602844>
3.2839 seconds
Tested. Sparse categorical accuracy: 91.67

round 20, metrics=<sparse_categorical_accuracy=0.8896666765213013,loss=0.3645799160003662>
2.8314 seconds
Tested. Sparse categorical accuracy: 85.00

round 21, metrics=<sparse_categorical_accuracy=0.9253333210945129,loss=0.25067436695098877>
2.9756 seconds
Tested. Sparse categorical accuracy: 91.67

round 22, metrics=<sparse_categorical_accuracy=0.9173333048820496,loss=0.27257734537124634>
2.9731 seconds
Tested. Sparse categorical accuracy: 86.67

round 23, metrics=<sparse_categorical_accuracy=0.9346666932106018,loss=0.21970807015895844>
2.9700 seconds
Tested. Sparse categorical accuracy: 95.00

round 24, metrics=<sparse_categorical_accuracy=0.9326666593551636,loss=0.2242530882358551>
2.8634 seconds
Tested. Sparse categorical accuracy: 98.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
