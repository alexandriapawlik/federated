
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:33:20.857481: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  297
2020-07-15 23:33:20.376064

How often each label is chosen for non-IID data
[23, 20, 22, 14, 21, 25, 18, 14, 21, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1420000046491623,loss=2.2861878871917725>
5.8859 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.1523333340883255,loss=2.264561891555786>
4.4402 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.2878333330154419,loss=2.208636999130249>
4.2444 seconds
Tested. Sparse categorical accuracy: 50.00

round  4, metrics=<sparse_categorical_accuracy=0.375166654586792,loss=2.25661563873291>
4.2873 seconds
Tested. Sparse categorical accuracy: 16.67

round  5, metrics=<sparse_categorical_accuracy=0.38866665959358215,loss=2.1011886596679688>
4.1218 seconds
Tested. Sparse categorical accuracy: 43.33

round  6, metrics=<sparse_categorical_accuracy=0.4645000100135803,loss=2.0446619987487793>
4.2627 seconds
Tested. Sparse categorical accuracy: 43.33

round  7, metrics=<sparse_categorical_accuracy=0.4713333249092102,loss=1.9022337198257446>
4.1652 seconds
Tested. Sparse categorical accuracy: 73.33

round  8, metrics=<sparse_categorical_accuracy=0.6208333373069763,loss=1.3422294855117798>
4.0790 seconds
Tested. Sparse categorical accuracy: 70.00

round  9, metrics=<sparse_categorical_accuracy=0.703166663646698,loss=1.026617169380188>
4.2018 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8343333601951599,loss=0.5816735625267029>
4.2223 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8834999799728394,loss=0.40155041217803955>
4.1476 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.8698333501815796,loss=0.4305694103240967>
4.4199 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
