
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:05:30.888073: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  22
2020-07-15 23:05:30.407653

How often each label is chosen for non-IID data
[22, 19, 16, 17, 18, 27, 17, 22, 22, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13616666197776794,loss=2.2892515659332275>
7.0794 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.15016666054725647,loss=2.2575066089630127>
5.3951 seconds
Tested. Sparse categorical accuracy: 20.00

round  3, metrics=<sparse_categorical_accuracy=0.2528333365917206,loss=2.1914901733398438>
5.0724 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.33500000834465027,loss=2.198483943939209>
5.1242 seconds
Tested. Sparse categorical accuracy: 23.33

round  5, metrics=<sparse_categorical_accuracy=0.3634999990463257,loss=2.060314893722534>
5.1000 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.5331666469573975,loss=1.5855798721313477>
5.2600 seconds
Tested. Sparse categorical accuracy: 63.33

round  7, metrics=<sparse_categorical_accuracy=0.6523333191871643,loss=1.1411861181259155>
5.4207 seconds
Tested. Sparse categorical accuracy: 70.00

round  8, metrics=<sparse_categorical_accuracy=0.7365000247955322,loss=0.8158280253410339>
5.1409 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8013333082199097,loss=0.6554847955703735>
5.1651 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8566666841506958,loss=0.4741399884223938>
5.2939 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8923333287239075,loss=0.34486836194992065>
5.1595 seconds
Tested. Sparse categorical accuracy: 80.00

round 12, metrics=<sparse_categorical_accuracy=0.9008333086967468,loss=0.3337797522544861>
5.0837 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
