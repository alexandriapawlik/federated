
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:13:47.448733: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  106
2020-07-15 23:13:46.963409

How often each label is chosen for non-IID data
[21, 24, 25, 23, 21, 16, 17, 20, 15, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08566666394472122,loss=2.3032405376434326>
2.9603 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.15566666424274445,loss=2.2950832843780518>
2.1381 seconds
Tested. Sparse categorical accuracy: 18.33

round  3, metrics=<sparse_categorical_accuracy=0.16366666555404663,loss=2.2873339653015137>
2.2172 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.1316666603088379,loss=2.2634613513946533>
2.0974 seconds
Tested. Sparse categorical accuracy: 10.00

round  5, metrics=<sparse_categorical_accuracy=0.11299999803304672,loss=2.2325031757354736>
2.2240 seconds
Tested. Sparse categorical accuracy: 35.00

round  6, metrics=<sparse_categorical_accuracy=0.2160000056028366,loss=2.166548252105713>
2.0664 seconds
Tested. Sparse categorical accuracy: 55.00

round  7, metrics=<sparse_categorical_accuracy=0.32066667079925537,loss=2.4075868129730225>
2.1740 seconds
Tested. Sparse categorical accuracy: 8.33

round  8, metrics=<sparse_categorical_accuracy=0.1523333340883255,loss=2.25404953956604>
2.0295 seconds
Tested. Sparse categorical accuracy: 16.67

round  9, metrics=<sparse_categorical_accuracy=0.3033333420753479,loss=2.134967565536499>
2.1775 seconds
Tested. Sparse categorical accuracy: 28.33

round 10, metrics=<sparse_categorical_accuracy=0.36266666650772095,loss=2.0212700366973877>
2.0500 seconds
Tested. Sparse categorical accuracy: 48.33

round 11, metrics=<sparse_categorical_accuracy=0.3799999952316284,loss=1.8607784509658813>
2.0501 seconds
Tested. Sparse categorical accuracy: 60.00

round 12, metrics=<sparse_categorical_accuracy=0.5206666588783264,loss=1.5679386854171753>
2.1631 seconds
Tested. Sparse categorical accuracy: 51.67

round 13, metrics=<sparse_categorical_accuracy=0.5566666722297668,loss=1.4931484460830688>
2.0023 seconds
Tested. Sparse categorical accuracy: 60.00

round 14, metrics=<sparse_categorical_accuracy=0.640333354473114,loss=1.3120548725128174>
2.1661 seconds
Tested. Sparse categorical accuracy: 61.67

round 15, metrics=<sparse_categorical_accuracy=0.7206666469573975,loss=0.9864281415939331>
2.0471 seconds
Tested. Sparse categorical accuracy: 86.67

round 16, metrics=<sparse_categorical_accuracy=0.7613333463668823,loss=0.821361243724823>
1.9945 seconds
Tested. Sparse categorical accuracy: 85.00

round 17, metrics=<sparse_categorical_accuracy=0.8606666922569275,loss=0.4954841434955597>
2.1809 seconds
Tested. Sparse categorical accuracy: 100.00

round 18, metrics=<sparse_categorical_accuracy=0.8676666617393494,loss=0.46711209416389465>
2.0454 seconds
Tested. Sparse categorical accuracy: 95.00

round 19, metrics=<sparse_categorical_accuracy=0.8203333616256714,loss=0.7287680506706238>
2.0320 seconds
Tested. Sparse categorical accuracy: 83.33

round 20, metrics=<sparse_categorical_accuracy=0.9003333449363708,loss=0.3947015106678009>
2.1015 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.8883333206176758,loss=0.37878575921058655>
2.0335 seconds
Tested. Sparse categorical accuracy: 93.33

round 22, metrics=<sparse_categorical_accuracy=0.9110000133514404,loss=0.3051457107067108>
1.9927 seconds
Tested. Sparse categorical accuracy: 93.33

round 23, metrics=<sparse_categorical_accuracy=0.8989999890327454,loss=0.36284613609313965>
2.1917 seconds
Tested. Sparse categorical accuracy: 95.00

round 24, metrics=<sparse_categorical_accuracy=0.9190000295639038,loss=0.27457162737846375>
2.0278 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
