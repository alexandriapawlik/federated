
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:12:28.057030: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  92
2020-07-15 23:12:27.571769

How often each label is chosen for non-IID data
[16, 17, 28, 16, 24, 20, 18, 26, 23, 12]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14499999582767487,loss=2.2888498306274414>
5.5994 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.14283333718776703,loss=2.2648379802703857>
4.2975 seconds
Tested. Sparse categorical accuracy: 43.33

round  3, metrics=<sparse_categorical_accuracy=0.24783332645893097,loss=2.2224485874176025>
4.0641 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.36783334612846375,loss=2.1936962604522705>
4.1772 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.4501666724681854,loss=1.9285541772842407>
4.1591 seconds
Tested. Sparse categorical accuracy: 63.33

round  6, metrics=<sparse_categorical_accuracy=0.6171666383743286,loss=1.336276888847351>
4.1182 seconds
Tested. Sparse categorical accuracy: 76.67

round  7, metrics=<sparse_categorical_accuracy=0.7128333449363708,loss=0.9818944334983826>
3.9322 seconds
Tested. Sparse categorical accuracy: 70.00

round  8, metrics=<sparse_categorical_accuracy=0.8065000176429749,loss=0.6480350494384766>
3.9350 seconds
Tested. Sparse categorical accuracy: 96.67

round  9, metrics=<sparse_categorical_accuracy=0.8500000238418579,loss=0.5077231526374817>
4.1640 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8741666674613953,loss=0.44448795914649963>
3.9134 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8978333473205566,loss=0.34121352434158325>
4.1391 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.9108333587646484,loss=0.29599663615226746>
4.2614 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
