
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:28:30.312684: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  252
2020-07-15 23:28:29.834555

How often each label is chosen for non-IID data
[15, 13, 24, 18, 23, 22, 23, 21, 24, 17]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15566666424274445,loss=2.283501386642456>
5.8853 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.22716666758060455,loss=2.255258560180664>
4.3057 seconds
Tested. Sparse categorical accuracy: 36.67

round  3, metrics=<sparse_categorical_accuracy=0.375166654586792,loss=2.203902244567871>
4.3207 seconds
Tested. Sparse categorical accuracy: 60.00

round  4, metrics=<sparse_categorical_accuracy=0.4241666793823242,loss=2.129608154296875>
4.2131 seconds
Tested. Sparse categorical accuracy: 33.33

round  5, metrics=<sparse_categorical_accuracy=0.43650001287460327,loss=1.8867052793502808>
4.3802 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.5874999761581421,loss=1.387148380279541>
4.2781 seconds
Tested. Sparse categorical accuracy: 50.00

round  7, metrics=<sparse_categorical_accuracy=0.7096666693687439,loss=0.9560774564743042>
4.2667 seconds
Tested. Sparse categorical accuracy: 73.33

round  8, metrics=<sparse_categorical_accuracy=0.8059999942779541,loss=0.6616159081459045>
4.2592 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8768333196640015,loss=0.4300652742385864>
4.1452 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8821666836738586,loss=0.3897078335285187>
4.2284 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8921666741371155,loss=0.37432608008384705>
3.9949 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9210000038146973,loss=0.27701884508132935>
4.0080 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
