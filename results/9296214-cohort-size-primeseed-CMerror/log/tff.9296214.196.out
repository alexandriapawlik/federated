
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:22:51.727190: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  196
2020-07-15 23:22:51.247526

How often each label is chosen for non-IID data
[21, 19, 20, 12, 22, 20, 31, 23, 13, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09033333510160446,loss=2.30477237701416>
3.1276 seconds
Tested. Sparse categorical accuracy: 5.00

round  2, metrics=<sparse_categorical_accuracy=0.09733333438634872,loss=2.295698404312134>
2.1936 seconds
Tested. Sparse categorical accuracy: 16.67

round  3, metrics=<sparse_categorical_accuracy=0.14800000190734863,loss=2.2818896770477295>
2.3119 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.13199999928474426,loss=2.2560672760009766>
2.1533 seconds
Tested. Sparse categorical accuracy: 20.00

round  5, metrics=<sparse_categorical_accuracy=0.2750000059604645,loss=2.196998357772827>
2.2902 seconds
Tested. Sparse categorical accuracy: 25.00

round  6, metrics=<sparse_categorical_accuracy=0.30799999833106995,loss=2.2680842876434326>
2.1460 seconds
Tested. Sparse categorical accuracy: 33.33

round  7, metrics=<sparse_categorical_accuracy=0.382999986410141,loss=2.144172191619873>
2.2707 seconds
Tested. Sparse categorical accuracy: 30.00

round  8, metrics=<sparse_categorical_accuracy=0.34933334589004517,loss=2.0583105087280273>
2.1375 seconds
Tested. Sparse categorical accuracy: 41.67

round  9, metrics=<sparse_categorical_accuracy=0.49033331871032715,loss=1.869712233543396>
2.2148 seconds
Tested. Sparse categorical accuracy: 56.67

round 10, metrics=<sparse_categorical_accuracy=0.5586666464805603,loss=1.647687315940857>
2.0889 seconds
Tested. Sparse categorical accuracy: 76.67

round 11, metrics=<sparse_categorical_accuracy=0.6116666793823242,loss=1.5990289449691772>
2.0680 seconds
Tested. Sparse categorical accuracy: 50.00

round 12, metrics=<sparse_categorical_accuracy=0.6333333253860474,loss=1.244397759437561>
2.2176 seconds
Tested. Sparse categorical accuracy: 66.67

round 13, metrics=<sparse_categorical_accuracy=0.7609999775886536,loss=0.7618733644485474>
2.0899 seconds
Tested. Sparse categorical accuracy: 75.00

round 14, metrics=<sparse_categorical_accuracy=0.7946666479110718,loss=0.7356560230255127>
2.2805 seconds
Tested. Sparse categorical accuracy: 56.67

round 15, metrics=<sparse_categorical_accuracy=0.8140000104904175,loss=0.6134406924247742>
2.0972 seconds
Tested. Sparse categorical accuracy: 80.00

round 16, metrics=<sparse_categorical_accuracy=0.8709999918937683,loss=0.43432852625846863>
2.1057 seconds
Tested. Sparse categorical accuracy: 78.33

round 17, metrics=<sparse_categorical_accuracy=0.875333309173584,loss=0.4204091727733612>
2.2592 seconds
Tested. Sparse categorical accuracy: 98.33

round 18, metrics=<sparse_categorical_accuracy=0.8703333139419556,loss=0.4647039771080017>
2.1144 seconds
Tested. Sparse categorical accuracy: 85.00

round 19, metrics=<sparse_categorical_accuracy=0.8999999761581421,loss=0.3535561263561249>
2.2490 seconds
Tested. Sparse categorical accuracy: 88.33

round 20, metrics=<sparse_categorical_accuracy=0.8963333368301392,loss=0.3424082398414612>
2.1136 seconds
Tested. Sparse categorical accuracy: 90.00

round 21, metrics=<sparse_categorical_accuracy=0.9206666946411133,loss=0.25671640038490295>
2.0546 seconds
Tested. Sparse categorical accuracy: 96.67

round 22, metrics=<sparse_categorical_accuracy=0.9213333129882812,loss=0.2644999921321869>
2.2479 seconds
Tested. Sparse categorical accuracy: 86.67

round 23, metrics=<sparse_categorical_accuracy=0.9013333320617676,loss=0.3275994062423706>
2.0854 seconds
Tested. Sparse categorical accuracy: 98.33

round 24, metrics=<sparse_categorical_accuracy=0.9233333468437195,loss=0.24836164712905884>
2.0442 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
