
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:32:53.515175: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  292
2020-07-15 23:32:53.019674

How often each label is chosen for non-IID data
[20, 15, 18, 17, 27, 19, 24, 21, 25, 14]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15266667306423187,loss=2.285212993621826>
7.5082 seconds
Tested. Sparse categorical accuracy: 30.00

round  2, metrics=<sparse_categorical_accuracy=0.19433332979679108,loss=2.247821092605591>
5.5734 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.29899999499320984,loss=2.322960376739502>
5.4962 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.1509999930858612,loss=2.27600359916687>
5.4979 seconds
Tested. Sparse categorical accuracy: 16.67

round  5, metrics=<sparse_categorical_accuracy=0.28866666555404663,loss=2.137432813644409>
5.3263 seconds
Tested. Sparse categorical accuracy: 33.33

round  6, metrics=<sparse_categorical_accuracy=0.42266666889190674,loss=1.88341224193573>
5.4747 seconds
Tested. Sparse categorical accuracy: 63.33

round  7, metrics=<sparse_categorical_accuracy=0.5674999952316284,loss=1.3964687585830688>
5.5049 seconds
Tested. Sparse categorical accuracy: 63.33

round  8, metrics=<sparse_categorical_accuracy=0.6681666374206543,loss=1.134827971458435>
5.1288 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.7748333215713501,loss=0.7992382645606995>
5.6236 seconds
Tested. Sparse categorical accuracy: 76.67

round 10, metrics=<sparse_categorical_accuracy=0.8389999866485596,loss=0.508933961391449>
5.3029 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.8769999742507935,loss=0.4240303039550781>
5.3986 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.8930000066757202,loss=0.34863290190696716>
4.8305 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
