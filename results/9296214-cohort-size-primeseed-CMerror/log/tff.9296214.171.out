
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:20:25.691931: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  171
2020-07-15 23:20:25.179060

How often each label is chosen for non-IID data
[8, 23, 20, 21, 20, 23, 21, 20, 16, 28]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10133333504199982,loss=2.304501533508301>
4.0296 seconds
Tested. Sparse categorical accuracy: 8.33

round  2, metrics=<sparse_categorical_accuracy=0.10899999737739563,loss=2.300133228302002>
3.1373 seconds
Tested. Sparse categorical accuracy: 11.67

round  3, metrics=<sparse_categorical_accuracy=0.10766666382551193,loss=2.2947750091552734>
3.2973 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.1146666631102562,loss=2.287010669708252>
2.7484 seconds
Tested. Sparse categorical accuracy: 36.67

round  5, metrics=<sparse_categorical_accuracy=0.2016666680574417,loss=2.2621026039123535>
3.0386 seconds
Tested. Sparse categorical accuracy: 21.67

round  6, metrics=<sparse_categorical_accuracy=0.195333331823349,loss=2.2107291221618652>
2.5941 seconds
Tested. Sparse categorical accuracy: 40.00

round  7, metrics=<sparse_categorical_accuracy=0.3333333432674408,loss=2.088951587677002>
2.7328 seconds
Tested. Sparse categorical accuracy: 56.67

round  8, metrics=<sparse_categorical_accuracy=0.30399999022483826,loss=2.6332385540008545>
2.5554 seconds
Tested. Sparse categorical accuracy: 30.00

round  9, metrics=<sparse_categorical_accuracy=0.20366667211055756,loss=2.292494535446167>
3.0826 seconds
Tested. Sparse categorical accuracy: 21.67

round 10, metrics=<sparse_categorical_accuracy=0.20933333039283752,loss=2.2619810104370117>
2.8201 seconds
Tested. Sparse categorical accuracy: 11.67

round 11, metrics=<sparse_categorical_accuracy=0.21533332765102386,loss=2.2131800651550293>
2.8878 seconds
Tested. Sparse categorical accuracy: 30.00

round 12, metrics=<sparse_categorical_accuracy=0.33633333444595337,loss=2.0557479858398438>
2.7666 seconds
Tested. Sparse categorical accuracy: 50.00

round 13, metrics=<sparse_categorical_accuracy=0.3880000114440918,loss=2.0015194416046143>
2.6787 seconds
Tested. Sparse categorical accuracy: 41.67

round 14, metrics=<sparse_categorical_accuracy=0.5543333292007446,loss=1.569880485534668>
2.6384 seconds
Tested. Sparse categorical accuracy: 70.00

round 15, metrics=<sparse_categorical_accuracy=0.5443333387374878,loss=1.9731632471084595>
2.4668 seconds
Tested. Sparse categorical accuracy: 40.00

round 16, metrics=<sparse_categorical_accuracy=0.5206666588783264,loss=1.4173600673675537>
3.1134 seconds
Tested. Sparse categorical accuracy: 63.33

round 17, metrics=<sparse_categorical_accuracy=0.6169999837875366,loss=1.3921897411346436>
2.6180 seconds
Tested. Sparse categorical accuracy: 68.33

round 18, metrics=<sparse_categorical_accuracy=0.7133333086967468,loss=0.9264160990715027>
2.6210 seconds
Tested. Sparse categorical accuracy: 83.33

round 19, metrics=<sparse_categorical_accuracy=0.7739999890327454,loss=0.802277684211731>
2.9099 seconds
Tested. Sparse categorical accuracy: 83.33

round 20, metrics=<sparse_categorical_accuracy=0.8209999799728394,loss=0.6240468621253967>
2.7393 seconds
Tested. Sparse categorical accuracy: 86.67

round 21, metrics=<sparse_categorical_accuracy=0.8576666712760925,loss=0.4756298363208771>
2.6262 seconds
Tested. Sparse categorical accuracy: 83.33

round 22, metrics=<sparse_categorical_accuracy=0.8790000081062317,loss=0.415249764919281>
2.9137 seconds
Tested. Sparse categorical accuracy: 86.67

round 23, metrics=<sparse_categorical_accuracy=0.8600000143051147,loss=0.47156795859336853>
2.6165 seconds
Tested. Sparse categorical accuracy: 95.00

round 24, metrics=<sparse_categorical_accuracy=0.8796666860580444,loss=0.4007183015346527>
2.5457 seconds
Tested. Sparse categorical accuracy: 95.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
