
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:39:12.082653: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  351
2020-07-15 23:39:11.605253

How often each label is chosen for non-IID data
[19, 26, 18, 22, 26, 20, 17, 17, 14, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13300000131130219,loss=2.2993826866149902>
2.9730 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.15033333003520966,loss=2.291043519973755>
2.2396 seconds
Tested. Sparse categorical accuracy: 8.33

round  3, metrics=<sparse_categorical_accuracy=0.1263333261013031,loss=2.2577614784240723>
2.3619 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.24300000071525574,loss=2.1975884437561035>
2.1729 seconds
Tested. Sparse categorical accuracy: 33.33

round  5, metrics=<sparse_categorical_accuracy=0.3766666650772095,loss=2.409593343734741>
2.3141 seconds
Tested. Sparse categorical accuracy: 8.33

round  6, metrics=<sparse_categorical_accuracy=0.17633333802223206,loss=2.278273344039917>
2.1244 seconds
Tested. Sparse categorical accuracy: 15.00

round  7, metrics=<sparse_categorical_accuracy=0.1550000011920929,loss=2.25608229637146>
2.2507 seconds
Tested. Sparse categorical accuracy: 25.00

round  8, metrics=<sparse_categorical_accuracy=0.2903333306312561,loss=2.1415188312530518>
2.1265 seconds
Tested. Sparse categorical accuracy: 33.33

round  9, metrics=<sparse_categorical_accuracy=0.3213333189487457,loss=2.1628265380859375>
2.3047 seconds
Tested. Sparse categorical accuracy: 31.67

round 10, metrics=<sparse_categorical_accuracy=0.367333322763443,loss=2.0492427349090576>
2.0903 seconds
Tested. Sparse categorical accuracy: 53.33

round 11, metrics=<sparse_categorical_accuracy=0.4803333282470703,loss=1.9529681205749512>
2.2313 seconds
Tested. Sparse categorical accuracy: 45.00

round 12, metrics=<sparse_categorical_accuracy=0.43166667222976685,loss=1.887148141860962>
2.0922 seconds
Tested. Sparse categorical accuracy: 56.67

round 13, metrics=<sparse_categorical_accuracy=0.5833333134651184,loss=1.6810578107833862>
2.0746 seconds
Tested. Sparse categorical accuracy: 68.33

round 14, metrics=<sparse_categorical_accuracy=0.609666645526886,loss=1.3998249769210815>
2.2356 seconds
Tested. Sparse categorical accuracy: 66.67

round 15, metrics=<sparse_categorical_accuracy=0.734333336353302,loss=0.9674845337867737>
2.0616 seconds
Tested. Sparse categorical accuracy: 78.33

round 16, metrics=<sparse_categorical_accuracy=0.7846666574478149,loss=0.7676962018013>
2.2412 seconds
Tested. Sparse categorical accuracy: 76.67

round 17, metrics=<sparse_categorical_accuracy=0.7983333468437195,loss=0.7067632079124451>
2.1370 seconds
Tested. Sparse categorical accuracy: 71.67

round 18, metrics=<sparse_categorical_accuracy=0.8063333630561829,loss=0.6395217776298523>
2.1010 seconds
Tested. Sparse categorical accuracy: 86.67

round 19, metrics=<sparse_categorical_accuracy=0.8446666598320007,loss=0.5941128730773926>
2.2191 seconds
Tested. Sparse categorical accuracy: 93.33

round 20, metrics=<sparse_categorical_accuracy=0.8949999809265137,loss=0.3761977255344391>
2.1281 seconds
Tested. Sparse categorical accuracy: 83.33

round 21, metrics=<sparse_categorical_accuracy=0.9136666655540466,loss=0.30382591485977173>
2.0928 seconds
Tested. Sparse categorical accuracy: 91.67

round 22, metrics=<sparse_categorical_accuracy=0.921999990940094,loss=0.2732205092906952>
2.2540 seconds
Tested. Sparse categorical accuracy: 93.33

round 23, metrics=<sparse_categorical_accuracy=0.9286666512489319,loss=0.24256664514541626>
2.1057 seconds
Tested. Sparse categorical accuracy: 88.33

round 24, metrics=<sparse_categorical_accuracy=0.92166668176651,loss=0.25856155157089233>
2.0982 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
