
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:41:06.068065: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  367
2020-07-15 23:41:05.582536

How often each label is chosen for non-IID data
[18, 17, 18, 21, 19, 27, 20, 27, 19, 14]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.09866666793823242,loss=2.28334379196167>
5.6146 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.12549999356269836,loss=2.24507212638855>
4.1777 seconds
Tested. Sparse categorical accuracy: 53.33

round  3, metrics=<sparse_categorical_accuracy=0.3125,loss=2.374746799468994>
4.2292 seconds
Tested. Sparse categorical accuracy: 10.00

round  4, metrics=<sparse_categorical_accuracy=0.12866666913032532,loss=2.289893627166748>
4.3007 seconds
Tested. Sparse categorical accuracy: 23.33

round  5, metrics=<sparse_categorical_accuracy=0.16500000655651093,loss=2.264404535293579>
4.0881 seconds
Tested. Sparse categorical accuracy: 30.00

round  6, metrics=<sparse_categorical_accuracy=0.29649999737739563,loss=2.196711778640747>
4.1567 seconds
Tested. Sparse categorical accuracy: 26.67

round  7, metrics=<sparse_categorical_accuracy=0.4154999852180481,loss=2.0586776733398438>
4.2758 seconds
Tested. Sparse categorical accuracy: 26.67

round  8, metrics=<sparse_categorical_accuracy=0.5513333082199097,loss=1.6151806116104126>
3.9898 seconds
Tested. Sparse categorical accuracy: 53.33

round  9, metrics=<sparse_categorical_accuracy=0.6455000042915344,loss=1.2085238695144653>
4.1498 seconds
Tested. Sparse categorical accuracy: 83.33

round 10, metrics=<sparse_categorical_accuracy=0.7701666951179504,loss=0.7673277258872986>
4.1163 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8330000042915344,loss=0.583237886428833>
3.9436 seconds
Tested. Sparse categorical accuracy: 83.33

round 12, metrics=<sparse_categorical_accuracy=0.8573333621025085,loss=0.46347904205322266>
4.1449 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
