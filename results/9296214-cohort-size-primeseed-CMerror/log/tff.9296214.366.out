
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:41:06.068534: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  366
2020-07-15 23:41:05.582666

How often each label is chosen for non-IID data
[18, 17, 18, 21, 19, 27, 20, 27, 19, 14]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08866667002439499,loss=2.3011741638183594>
3.1565 seconds
Tested. Sparse categorical accuracy: 15.00

round  2, metrics=<sparse_categorical_accuracy=0.13866665959358215,loss=2.2930824756622314>
2.2869 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.12099999934434891,loss=2.2627646923065186>
2.3736 seconds
Tested. Sparse categorical accuracy: 8.33

round  4, metrics=<sparse_categorical_accuracy=0.2029999941587448,loss=2.2203941345214844>
2.1562 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.38466668128967285,loss=2.2907698154449463>
2.3346 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.37033334374427795,loss=2.2365307807922363>
2.2336 seconds
Tested. Sparse categorical accuracy: 31.67

round  7, metrics=<sparse_categorical_accuracy=0.3786666691303253,loss=2.0694708824157715>
2.3287 seconds
Tested. Sparse categorical accuracy: 28.33

round  8, metrics=<sparse_categorical_accuracy=0.4519999921321869,loss=2.651365280151367>
2.2264 seconds
Tested. Sparse categorical accuracy: 15.00

round  9, metrics=<sparse_categorical_accuracy=0.17266666889190674,loss=2.2875020503997803>
2.2912 seconds
Tested. Sparse categorical accuracy: 15.00

round 10, metrics=<sparse_categorical_accuracy=0.20900000631809235,loss=2.233663320541382>
2.1287 seconds
Tested. Sparse categorical accuracy: 16.67

round 11, metrics=<sparse_categorical_accuracy=0.2693333327770233,loss=2.070051670074463>
2.2596 seconds
Tested. Sparse categorical accuracy: 35.00

round 12, metrics=<sparse_categorical_accuracy=0.3723333477973938,loss=2.135662317276001>
2.1502 seconds
Tested. Sparse categorical accuracy: 30.00

round 13, metrics=<sparse_categorical_accuracy=0.351666659116745,loss=1.9412823915481567>
2.1138 seconds
Tested. Sparse categorical accuracy: 50.00

round 14, metrics=<sparse_categorical_accuracy=0.5350000262260437,loss=1.5178301334381104>
2.2592 seconds
Tested. Sparse categorical accuracy: 60.00

round 15, metrics=<sparse_categorical_accuracy=0.5746666789054871,loss=1.2947461605072021>
2.1202 seconds
Tested. Sparse categorical accuracy: 70.00

round 16, metrics=<sparse_categorical_accuracy=0.675000011920929,loss=1.3634012937545776>
2.2250 seconds
Tested. Sparse categorical accuracy: 56.67

round 17, metrics=<sparse_categorical_accuracy=0.6923333406448364,loss=0.9848633408546448>
2.1265 seconds
Tested. Sparse categorical accuracy: 66.67

round 18, metrics=<sparse_categorical_accuracy=0.7603333592414856,loss=0.8102737665176392>
2.1167 seconds
Tested. Sparse categorical accuracy: 75.00

round 19, metrics=<sparse_categorical_accuracy=0.8116666674613953,loss=0.6748919486999512>
2.2983 seconds
Tested. Sparse categorical accuracy: 75.00

round 20, metrics=<sparse_categorical_accuracy=0.8373333215713501,loss=0.519468367099762>
2.1485 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.890999972820282,loss=0.3540938198566437>
2.1304 seconds
Tested. Sparse categorical accuracy: 88.33

round 22, metrics=<sparse_categorical_accuracy=0.8866666555404663,loss=0.376149982213974>
2.2744 seconds
Tested. Sparse categorical accuracy: 95.00

round 23, metrics=<sparse_categorical_accuracy=0.8756666779518127,loss=0.3922055959701538>
2.0820 seconds
Tested. Sparse categorical accuracy: 85.00

round 24, metrics=<sparse_categorical_accuracy=0.9039999842643738,loss=0.31825196743011475>
2.0639 seconds
Tested. Sparse categorical accuracy: 91.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
