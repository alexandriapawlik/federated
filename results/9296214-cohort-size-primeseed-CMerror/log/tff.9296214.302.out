
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:33:58.844869: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  302
2020-07-15 23:33:58.353252

How often each label is chosen for non-IID data
[18, 13, 15, 22, 21, 18, 28, 22, 23, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1274999976158142,loss=2.289703369140625>
5.9059 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.16433332860469818,loss=2.2596209049224854>
4.4414 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.24500000476837158,loss=2.2028346061706543>
4.4205 seconds
Tested. Sparse categorical accuracy: 50.00

round  4, metrics=<sparse_categorical_accuracy=0.39500001072883606,loss=2.1154839992523193>
4.2318 seconds
Tested. Sparse categorical accuracy: 53.33

round  5, metrics=<sparse_categorical_accuracy=0.453000009059906,loss=1.9465185403823853>
4.3394 seconds
Tested. Sparse categorical accuracy: 56.67

round  6, metrics=<sparse_categorical_accuracy=0.6018333435058594,loss=1.4004689455032349>
4.5951 seconds
Tested. Sparse categorical accuracy: 60.00

round  7, metrics=<sparse_categorical_accuracy=0.7381666898727417,loss=0.9100281596183777>
4.5652 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8264999985694885,loss=0.597196638584137>
4.2014 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8648333549499512,loss=0.46458789706230164>
4.3879 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8511666655540466,loss=0.5001757740974426>
4.3208 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.8806666731834412,loss=0.4085870385169983>
4.1357 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9073333144187927,loss=0.30439645051956177>
4.2953 seconds
Tested. Sparse categorical accuracy: 83.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
