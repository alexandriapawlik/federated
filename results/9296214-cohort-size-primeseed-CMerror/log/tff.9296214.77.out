
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:10:53.494517: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  77
2020-07-15 23:10:53.016817

How often each label is chosen for non-IID data
[15, 22, 20, 20, 21, 26, 14, 25, 19, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14683333039283752,loss=2.2831196784973145>
5.7001 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.18783333897590637,loss=2.257608652114868>
4.3328 seconds
Tested. Sparse categorical accuracy: 43.33

round  3, metrics=<sparse_categorical_accuracy=0.3316666781902313,loss=2.2029569149017334>
4.1005 seconds
Tested. Sparse categorical accuracy: 73.33

round  4, metrics=<sparse_categorical_accuracy=0.406333327293396,loss=2.2704551219940186>
4.2732 seconds
Tested. Sparse categorical accuracy: 10.00

round  5, metrics=<sparse_categorical_accuracy=0.23600000143051147,loss=2.175111770629883>
4.1873 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.42783331871032715,loss=1.953808069229126>
4.2790 seconds
Tested. Sparse categorical accuracy: 76.67

round  7, metrics=<sparse_categorical_accuracy=0.5518333315849304,loss=1.832659125328064>
3.9211 seconds
Tested. Sparse categorical accuracy: 50.00

round  8, metrics=<sparse_categorical_accuracy=0.6284999847412109,loss=1.2211966514587402>
4.1875 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.7308333516120911,loss=0.9559981226921082>
4.1959 seconds
Tested. Sparse categorical accuracy: 96.67

round 10, metrics=<sparse_categorical_accuracy=0.812333345413208,loss=0.6076258420944214>
4.0416 seconds
Tested. Sparse categorical accuracy: 83.33

round 11, metrics=<sparse_categorical_accuracy=0.8305000066757202,loss=0.5781387686729431>
4.3200 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.8794999718666077,loss=0.38659465312957764>
4.1772 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
