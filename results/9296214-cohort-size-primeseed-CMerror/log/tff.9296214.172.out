
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:20:27.036327: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  172
2020-07-15 23:20:26.547298

How often each label is chosen for non-IID data
[8, 23, 20, 21, 20, 23, 21, 20, 16, 28]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11999999731779099,loss=2.281952381134033>
5.9086 seconds
Tested. Sparse categorical accuracy: 36.67

round  2, metrics=<sparse_categorical_accuracy=0.17233332991600037,loss=2.2359702587127686>
4.3866 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.3473333418369293,loss=2.2685911655426025>
4.4310 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.3253333270549774,loss=2.155816078186035>
4.2727 seconds
Tested. Sparse categorical accuracy: 76.67

round  5, metrics=<sparse_categorical_accuracy=0.4869999885559082,loss=1.900301456451416>
4.2941 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.6241666674613953,loss=1.386530876159668>
4.1927 seconds
Tested. Sparse categorical accuracy: 73.33

round  7, metrics=<sparse_categorical_accuracy=0.7559999823570251,loss=0.8681507706642151>
4.1010 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.8391666412353516,loss=0.5582483410835266>
4.2595 seconds
Tested. Sparse categorical accuracy: 90.00

round  9, metrics=<sparse_categorical_accuracy=0.8463333249092102,loss=0.5371940732002258>
4.2261 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8953333497047424,loss=0.3464256227016449>
4.1785 seconds
Tested. Sparse categorical accuracy: 83.33

round 11, metrics=<sparse_categorical_accuracy=0.9136666655540466,loss=0.28573259711265564>
4.0988 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9150000214576721,loss=0.2842174172401428>
4.3026 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
