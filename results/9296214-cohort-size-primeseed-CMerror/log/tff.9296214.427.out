
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:47:12.538984: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  427
2020-07-15 23:47:12.053217

How often each label is chosen for non-IID data
[21, 17, 18, 18, 19, 17, 26, 19, 18, 27]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13850000500679016,loss=2.288130283355713>
5.8685 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.15199999511241913,loss=2.258270740509033>
4.5618 seconds
Tested. Sparse categorical accuracy: 26.67

round  3, metrics=<sparse_categorical_accuracy=0.2696666717529297,loss=2.198146343231201>
4.4610 seconds
Tested. Sparse categorical accuracy: 56.67

round  4, metrics=<sparse_categorical_accuracy=0.38866665959358215,loss=2.1254093647003174>
4.3674 seconds
Tested. Sparse categorical accuracy: 53.33

round  5, metrics=<sparse_categorical_accuracy=0.5021666884422302,loss=1.890289068222046>
4.4334 seconds
Tested. Sparse categorical accuracy: 80.00

round  6, metrics=<sparse_categorical_accuracy=0.7023333311080933,loss=1.1138622760772705>
4.2846 seconds
Tested. Sparse categorical accuracy: 70.00

round  7, metrics=<sparse_categorical_accuracy=0.718833327293396,loss=0.9553171992301941>
4.3401 seconds
Tested. Sparse categorical accuracy: 76.67

round  8, metrics=<sparse_categorical_accuracy=0.8364999890327454,loss=0.5722501873970032>
4.1017 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8656666874885559,loss=0.4483020007610321>
4.2086 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8715000152587891,loss=0.4362654983997345>
4.2658 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.918833315372467,loss=0.2823089361190796>
4.1317 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9163333177566528,loss=0.2644457519054413>
4.4629 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
