
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:51:33.166704: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  469
2020-07-15 23:51:32.661813

How often each label is chosen for non-IID data
[15, 23, 17, 17, 24, 17, 24, 24, 26, 13]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.17108333110809326,loss=2.2601771354675293>
17.2398 seconds
Tested. Sparse categorical accuracy: 60.00

round  2, metrics=<sparse_categorical_accuracy=0.2879166603088379,loss=2.188627004623413>
12.5279 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.5019166469573975,loss=1.769505500793457>
12.9534 seconds
Tested. Sparse categorical accuracy: 66.67

round  4, metrics=<sparse_categorical_accuracy=0.7057499885559082,loss=0.9782937169075012>
12.4161 seconds
Tested. Sparse categorical accuracy: 93.33

round  5, metrics=<sparse_categorical_accuracy=0.8335000276565552,loss=0.5790296792984009>
13.7366 seconds
Tested. Sparse categorical accuracy: 93.33

round  6, metrics=<sparse_categorical_accuracy=0.8850833177566528,loss=0.3843892812728882>
13.1851 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 15]
