
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:37:12.675006: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  332
2020-07-15 23:37:12.185679

How often each label is chosen for non-IID data
[20, 20, 22, 27, 23, 15, 21, 16, 20, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.140666663646698,loss=2.28470516204834>
7.0754 seconds
Tested. Sparse categorical accuracy: 23.33

round  2, metrics=<sparse_categorical_accuracy=0.1836666613817215,loss=2.258028507232666>
5.0587 seconds
Tested. Sparse categorical accuracy: 26.67

round  3, metrics=<sparse_categorical_accuracy=0.26766666769981384,loss=2.2081596851348877>
5.1862 seconds
Tested. Sparse categorical accuracy: 66.67

round  4, metrics=<sparse_categorical_accuracy=0.39100000262260437,loss=2.345215082168579>
5.4074 seconds
Tested. Sparse categorical accuracy: 6.67

round  5, metrics=<sparse_categorical_accuracy=0.2461666613817215,loss=2.1898396015167236>
5.4113 seconds
Tested. Sparse categorical accuracy: 26.67

round  6, metrics=<sparse_categorical_accuracy=0.4426666796207428,loss=1.9879471063613892>
5.7409 seconds
Tested. Sparse categorical accuracy: 30.00

round  7, metrics=<sparse_categorical_accuracy=0.5874999761581421,loss=1.4156227111816406>
5.1856 seconds
Tested. Sparse categorical accuracy: 73.33

round  8, metrics=<sparse_categorical_accuracy=0.7516666650772095,loss=0.8614044785499573>
5.5119 seconds
Tested. Sparse categorical accuracy: 73.33

round  9, metrics=<sparse_categorical_accuracy=0.828499972820282,loss=0.6214568018913269>
5.3845 seconds
Tested. Sparse categorical accuracy: 80.00

round 10, metrics=<sparse_categorical_accuracy=0.8688333630561829,loss=0.46529725193977356>
5.3718 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8911666870117188,loss=0.35638168454170227>
5.5382 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9108333587646484,loss=0.2903752028942108>
5.4732 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
