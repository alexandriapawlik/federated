
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:13:06.702051: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  97
2020-07-15 23:13:06.203311

How often each label is chosen for non-IID data
[21, 28, 23, 15, 21, 16, 19, 22, 20, 15]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1498333364725113,loss=2.283170700073242>
7.5326 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.20333333313465118,loss=2.237971782684326>
5.7808 seconds
Tested. Sparse categorical accuracy: 40.00

round  3, metrics=<sparse_categorical_accuracy=0.3868333399295807,loss=2.186401605606079>
5.5585 seconds
Tested. Sparse categorical accuracy: 53.33

round  4, metrics=<sparse_categorical_accuracy=0.47850000858306885,loss=1.9845112562179565>
5.4586 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.6265000104904175,loss=1.3527899980545044>
5.4694 seconds
Tested. Sparse categorical accuracy: 76.67

round  6, metrics=<sparse_categorical_accuracy=0.7163333296775818,loss=0.9581509828567505>
5.3039 seconds
Tested. Sparse categorical accuracy: 86.67

round  7, metrics=<sparse_categorical_accuracy=0.812833309173584,loss=0.6773290038108826>
5.1193 seconds
Tested. Sparse categorical accuracy: 96.67

round  8, metrics=<sparse_categorical_accuracy=0.8650000095367432,loss=0.46883824467658997>
5.1865 seconds
Tested. Sparse categorical accuracy: 96.67

round  9, metrics=<sparse_categorical_accuracy=0.8855000138282776,loss=0.37944933772087097>
5.5308 seconds
Tested. Sparse categorical accuracy: 96.67

round 10, metrics=<sparse_categorical_accuracy=0.909500002861023,loss=0.3023936450481415>
5.1515 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.9120000004768372,loss=0.28998851776123047>
5.0773 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9169999957084656,loss=0.2763602137565613>
5.6846 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
