
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:16:18.172893: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  132
2020-07-15 23:16:17.688889

How often each label is chosen for non-IID data
[18, 21, 13, 25, 27, 16, 18, 25, 16, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12133333086967468,loss=2.2880001068115234>
6.0037 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.19316667318344116,loss=2.243666172027588>
4.2612 seconds
Tested. Sparse categorical accuracy: 46.67

round  3, metrics=<sparse_categorical_accuracy=0.32216668128967285,loss=2.280893325805664>
4.1806 seconds
Tested. Sparse categorical accuracy: 0.00

round  4, metrics=<sparse_categorical_accuracy=0.19983333349227905,loss=2.2397167682647705>
4.1866 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.39649999141693115,loss=2.0464048385620117>
4.0590 seconds
Tested. Sparse categorical accuracy: 73.33

round  6, metrics=<sparse_categorical_accuracy=0.5411666631698608,loss=1.5789130926132202>
4.1967 seconds
Tested. Sparse categorical accuracy: 23.33

round  7, metrics=<sparse_categorical_accuracy=0.7038333415985107,loss=0.9812847375869751>
4.1261 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.7925000190734863,loss=0.7027541399002075>
4.0054 seconds
Tested. Sparse categorical accuracy: 100.00

round  9, metrics=<sparse_categorical_accuracy=0.8161666393280029,loss=0.6342674493789673>
4.0947 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8824999928474426,loss=0.40118974447250366>
4.0647 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.89083331823349,loss=0.3585418164730072>
4.1539 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.9193333387374878,loss=0.26487088203430176>
4.0021 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
