
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:07:34.201640: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  41
2020-07-15 23:07:33.705968

How often each label is chosen for non-IID data
[24, 25, 19, 24, 12, 17, 19, 27, 15, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12300000339746475,loss=2.3026483058929443>
2.9608 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.16466666758060455,loss=2.2864296436309814>
2.1458 seconds
Tested. Sparse categorical accuracy: 16.67

round  3, metrics=<sparse_categorical_accuracy=0.09666666388511658,loss=2.273146629333496>
2.2642 seconds
Tested. Sparse categorical accuracy: 28.33

round  4, metrics=<sparse_categorical_accuracy=0.22033333778381348,loss=2.208177328109741>
2.1664 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.24633333086967468,loss=2.1253461837768555>
2.2703 seconds
Tested. Sparse categorical accuracy: 68.33

round  6, metrics=<sparse_categorical_accuracy=0.3656666576862335,loss=2.321488618850708>
2.0672 seconds
Tested. Sparse categorical accuracy: 31.67

round  7, metrics=<sparse_categorical_accuracy=0.36800000071525574,loss=2.0667812824249268>
2.2405 seconds
Tested. Sparse categorical accuracy: 26.67

round  8, metrics=<sparse_categorical_accuracy=0.4269999861717224,loss=1.788555383682251>
2.0949 seconds
Tested. Sparse categorical accuracy: 53.33

round  9, metrics=<sparse_categorical_accuracy=0.5423333048820496,loss=1.6290066242218018>
2.1998 seconds
Tested. Sparse categorical accuracy: 60.00

round 10, metrics=<sparse_categorical_accuracy=0.640666663646698,loss=1.2990490198135376>
2.0741 seconds
Tested. Sparse categorical accuracy: 80.00

round 11, metrics=<sparse_categorical_accuracy=0.7149999737739563,loss=1.0286948680877686>
2.0448 seconds
Tested. Sparse categorical accuracy: 75.00

round 12, metrics=<sparse_categorical_accuracy=0.7206666469573975,loss=0.9324897527694702>
2.2142 seconds
Tested. Sparse categorical accuracy: 81.67

round 13, metrics=<sparse_categorical_accuracy=0.7773333191871643,loss=0.8546713590621948>
2.0223 seconds
Tested. Sparse categorical accuracy: 78.33

round 14, metrics=<sparse_categorical_accuracy=0.8403333425521851,loss=0.545742392539978>
2.1619 seconds
Tested. Sparse categorical accuracy: 85.00

round 15, metrics=<sparse_categorical_accuracy=0.8270000219345093,loss=0.6106079816818237>
2.0218 seconds
Tested. Sparse categorical accuracy: 85.00

round 16, metrics=<sparse_categorical_accuracy=0.8713333606719971,loss=0.4558921754360199>
2.1953 seconds
Tested. Sparse categorical accuracy: 88.33

round 17, metrics=<sparse_categorical_accuracy=0.8863333463668823,loss=0.38772135972976685>
2.0362 seconds
Tested. Sparse categorical accuracy: 96.67

round 18, metrics=<sparse_categorical_accuracy=0.8939999938011169,loss=0.37275952100753784>
2.0087 seconds
Tested. Sparse categorical accuracy: 91.67

round 19, metrics=<sparse_categorical_accuracy=0.9020000100135803,loss=0.3326273262500763>
2.1948 seconds
Tested. Sparse categorical accuracy: 91.67

round 20, metrics=<sparse_categorical_accuracy=0.9120000004768372,loss=0.31013110280036926>
2.0204 seconds
Tested. Sparse categorical accuracy: 88.33

round 21, metrics=<sparse_categorical_accuracy=0.9326666593551636,loss=0.23405644297599792>
2.0538 seconds
Tested. Sparse categorical accuracy: 90.00

round 22, metrics=<sparse_categorical_accuracy=0.9210000038146973,loss=0.25372403860092163>
2.1728 seconds
Tested. Sparse categorical accuracy: 100.00

round 23, metrics=<sparse_categorical_accuracy=0.8896666765213013,loss=0.35973405838012695>
2.0343 seconds
Tested. Sparse categorical accuracy: 91.67

round 24, metrics=<sparse_categorical_accuracy=0.9443333148956299,loss=0.2043764442205429>
2.0134 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
