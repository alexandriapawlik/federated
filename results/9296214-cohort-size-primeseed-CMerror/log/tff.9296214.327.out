
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:36:41.826436: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  327
2020-07-15 23:36:41.341242

How often each label is chosen for non-IID data
[20, 18, 26, 18, 14, 19, 19, 20, 21, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14300000667572021,loss=2.2849972248077393>
6.0688 seconds
Tested. Sparse categorical accuracy: 33.33

round  2, metrics=<sparse_categorical_accuracy=0.19499999284744263,loss=2.2402596473693848>
4.5591 seconds
Tested. Sparse categorical accuracy: 56.67

round  3, metrics=<sparse_categorical_accuracy=0.3255000114440918,loss=2.1926486492156982>
4.4877 seconds
Tested. Sparse categorical accuracy: 76.67

round  4, metrics=<sparse_categorical_accuracy=0.4568333327770233,loss=2.002460479736328>
4.3648 seconds
Tested. Sparse categorical accuracy: 70.00

round  5, metrics=<sparse_categorical_accuracy=0.5358333587646484,loss=1.7592620849609375>
4.4519 seconds
Tested. Sparse categorical accuracy: 83.33

round  6, metrics=<sparse_categorical_accuracy=0.6666666865348816,loss=1.127502202987671>
4.3888 seconds
Tested. Sparse categorical accuracy: 73.33

round  7, metrics=<sparse_categorical_accuracy=0.7571666836738586,loss=0.8583515882492065>
4.5403 seconds
Tested. Sparse categorical accuracy: 90.00

round  8, metrics=<sparse_categorical_accuracy=0.8031666874885559,loss=0.6850439310073853>
4.2080 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.875333309173584,loss=0.42733341455459595>
4.4129 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8943333625793457,loss=0.3650982975959778>
4.3979 seconds
Tested. Sparse categorical accuracy: 80.00

round 11, metrics=<sparse_categorical_accuracy=0.9113333225250244,loss=0.2909947633743286>
4.1029 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.8943333625793457,loss=0.35828128457069397>
4.5539 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
