
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:42:58.553761: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  386
2020-07-15 23:42:58.052869

How often each label is chosen for non-IID data
[31, 16, 17, 21, 21, 22, 16, 24, 13, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11233333498239517,loss=2.3039755821228027>
3.3048 seconds
Tested. Sparse categorical accuracy: 11.67

round  2, metrics=<sparse_categorical_accuracy=0.11900000274181366,loss=2.2879111766815186>
2.3896 seconds
Tested. Sparse categorical accuracy: 16.67

round  3, metrics=<sparse_categorical_accuracy=0.11733333021402359,loss=2.266031265258789>
2.5315 seconds
Tested. Sparse categorical accuracy: 6.67

round  4, metrics=<sparse_categorical_accuracy=0.15533334016799927,loss=2.2230591773986816>
2.3043 seconds
Tested. Sparse categorical accuracy: 38.33

round  5, metrics=<sparse_categorical_accuracy=0.3959999978542328,loss=2.1799540519714355>
2.4539 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.31433331966400146,loss=2.039098024368286>
2.2785 seconds
Tested. Sparse categorical accuracy: 61.67

round  7, metrics=<sparse_categorical_accuracy=0.35199999809265137,loss=2.7996737957000732>
2.4498 seconds
Tested. Sparse categorical accuracy: 20.00

round  8, metrics=<sparse_categorical_accuracy=0.125,loss=2.2963082790374756>
2.2534 seconds
Tested. Sparse categorical accuracy: 18.33

round  9, metrics=<sparse_categorical_accuracy=0.16966666281223297,loss=2.2837750911712646>
2.4013 seconds
Tested. Sparse categorical accuracy: 26.67

round 10, metrics=<sparse_categorical_accuracy=0.28299999237060547,loss=2.2276389598846436>
2.2242 seconds
Tested. Sparse categorical accuracy: 33.33

round 11, metrics=<sparse_categorical_accuracy=0.2603333294391632,loss=2.1625113487243652>
2.2473 seconds
Tested. Sparse categorical accuracy: 30.00

round 12, metrics=<sparse_categorical_accuracy=0.3213333189487457,loss=2.0344789028167725>
2.3405 seconds
Tested. Sparse categorical accuracy: 38.33

round 13, metrics=<sparse_categorical_accuracy=0.39899998903274536,loss=1.869686245918274>
2.2172 seconds
Tested. Sparse categorical accuracy: 33.33

round 14, metrics=<sparse_categorical_accuracy=0.33899998664855957,loss=1.7395412921905518>
2.3688 seconds
Tested. Sparse categorical accuracy: 66.67

round 15, metrics=<sparse_categorical_accuracy=0.4936666786670685,loss=1.7228074073791504>
2.1992 seconds
Tested. Sparse categorical accuracy: 75.00

round 16, metrics=<sparse_categorical_accuracy=0.5699999928474426,loss=1.3602478504180908>
2.2317 seconds
Tested. Sparse categorical accuracy: 81.67

round 17, metrics=<sparse_categorical_accuracy=0.6483333110809326,loss=1.4522745609283447>
2.3341 seconds
Tested. Sparse categorical accuracy: 60.00

round 18, metrics=<sparse_categorical_accuracy=0.7170000076293945,loss=0.9692322015762329>
2.1769 seconds
Tested. Sparse categorical accuracy: 78.33

round 19, metrics=<sparse_categorical_accuracy=0.7153333425521851,loss=1.0493419170379639>
2.3843 seconds
Tested. Sparse categorical accuracy: 76.67

round 20, metrics=<sparse_categorical_accuracy=0.7879999876022339,loss=0.6965399384498596>
2.1974 seconds
Tested. Sparse categorical accuracy: 88.33

round 21, metrics=<sparse_categorical_accuracy=0.8600000143051147,loss=0.5153959393501282>
2.2372 seconds
Tested. Sparse categorical accuracy: 90.00

round 22, metrics=<sparse_categorical_accuracy=0.890999972820282,loss=0.4052790105342865>
2.3717 seconds
Tested. Sparse categorical accuracy: 86.67

round 23, metrics=<sparse_categorical_accuracy=0.8763333559036255,loss=0.4260292649269104>
2.2470 seconds
Tested. Sparse categorical accuracy: 96.67

round 24, metrics=<sparse_categorical_accuracy=0.859666645526886,loss=0.5039503574371338>
2.1673 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
