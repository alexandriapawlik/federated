
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:15:43.320948: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  122
2020-07-15 23:15:42.836358

How often each label is chosen for non-IID data
[22, 22, 16, 19, 21, 18, 20, 18, 20, 24]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1211666688323021,loss=2.2863094806671143>
5.7447 seconds
Tested. Sparse categorical accuracy: 23.33

round  2, metrics=<sparse_categorical_accuracy=0.1978333294391632,loss=2.2452571392059326>
4.3027 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.31833332777023315,loss=2.1728012561798096>
4.0513 seconds
Tested. Sparse categorical accuracy: 33.33

round  4, metrics=<sparse_categorical_accuracy=0.3774999976158142,loss=2.091073751449585>
4.3291 seconds
Tested. Sparse categorical accuracy: 50.00

round  5, metrics=<sparse_categorical_accuracy=0.4788333475589752,loss=1.7651629447937012>
4.2987 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.6119999885559082,loss=1.3211506605148315>
4.1016 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.7553333044052124,loss=0.7921793460845947>
4.1974 seconds
Tested. Sparse categorical accuracy: 90.00

round  8, metrics=<sparse_categorical_accuracy=0.8059999942779541,loss=0.6860226988792419>
4.1406 seconds
Tested. Sparse categorical accuracy: 96.67

round  9, metrics=<sparse_categorical_accuracy=0.871999979019165,loss=0.45102810859680176>
4.0990 seconds
Tested. Sparse categorical accuracy: 73.33

round 10, metrics=<sparse_categorical_accuracy=0.8901666402816772,loss=0.3704822063446045>
4.1459 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.9010000228881836,loss=0.32494741678237915>
4.0585 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.906000018119812,loss=0.31466227769851685>
4.1299 seconds
Tested. Sparse categorical accuracy: 83.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
