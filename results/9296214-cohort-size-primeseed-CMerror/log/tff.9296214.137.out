
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:17:06.051444: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  137
2020-07-15 23:17:05.567597

How often each label is chosen for non-IID data
[24, 17, 24, 21, 26, 19, 19, 8, 12, 30]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11699999868869781,loss=2.282636880874634>
5.6620 seconds
Tested. Sparse categorical accuracy: 23.33

round  2, metrics=<sparse_categorical_accuracy=0.1875,loss=2.2803173065185547>
4.3613 seconds
Tested. Sparse categorical accuracy: 50.00

round  3, metrics=<sparse_categorical_accuracy=0.3486666679382324,loss=2.2106776237487793>
4.2030 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.43566668033599854,loss=2.226515531539917>
4.1556 seconds
Tested. Sparse categorical accuracy: 43.33

round  5, metrics=<sparse_categorical_accuracy=0.4334999918937683,loss=1.9431825876235962>
4.0391 seconds
Tested. Sparse categorical accuracy: 73.33

round  6, metrics=<sparse_categorical_accuracy=0.5976666808128357,loss=1.5190023183822632>
4.0788 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.7153333425521851,loss=1.0105763673782349>
3.9746 seconds
Tested. Sparse categorical accuracy: 80.00

round  8, metrics=<sparse_categorical_accuracy=0.8274999856948853,loss=0.6274074912071228>
3.9227 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8573333621025085,loss=0.493075430393219>
3.9807 seconds
Tested. Sparse categorical accuracy: 83.33

round 10, metrics=<sparse_categorical_accuracy=0.8949999809265137,loss=0.3583056926727295>
3.8427 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.8681666851043701,loss=0.47871723771095276>
4.0789 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.909500002861023,loss=0.3192022740840912>
4.0088 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
