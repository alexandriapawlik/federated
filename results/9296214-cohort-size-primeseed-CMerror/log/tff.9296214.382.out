
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:42:34.585432: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  382
2020-07-15 23:42:34.101223

How often each label is chosen for non-IID data
[24, 12, 20, 20, 27, 17, 19, 18, 23, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1340000033378601,loss=2.2857184410095215>
6.1813 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.20499999821186066,loss=2.239593982696533>
4.6918 seconds
Tested. Sparse categorical accuracy: 50.00

round  3, metrics=<sparse_categorical_accuracy=0.3316666781902313,loss=2.186330795288086>
4.5885 seconds
Tested. Sparse categorical accuracy: 56.67

round  4, metrics=<sparse_categorical_accuracy=0.44699999690055847,loss=2.024033784866333>
4.3261 seconds
Tested. Sparse categorical accuracy: 50.00

round  5, metrics=<sparse_categorical_accuracy=0.5743333101272583,loss=1.5446946620941162>
4.5008 seconds
Tested. Sparse categorical accuracy: 80.00

round  6, metrics=<sparse_categorical_accuracy=0.6545000076293945,loss=1.2797255516052246>
4.5777 seconds
Tested. Sparse categorical accuracy: 73.33

round  7, metrics=<sparse_categorical_accuracy=0.7695000171661377,loss=0.7464741468429565>
4.1937 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8088333606719971,loss=0.6628220677375793>
4.3216 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8501666784286499,loss=0.5213990211486816>
4.5403 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8793333172798157,loss=0.4101298451423645>
4.3950 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.9068333506584167,loss=0.3164287805557251>
4.2931 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9128333330154419,loss=0.283316969871521>
4.5182 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
