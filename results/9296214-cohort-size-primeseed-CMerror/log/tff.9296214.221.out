
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:25:19.918053: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  221
2020-07-15 23:25:19.368197

How often each label is chosen for non-IID data
[24, 23, 23, 19, 22, 15, 17, 20, 16, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10400000214576721,loss=2.302088499069214>
4.1091 seconds
Tested. Sparse categorical accuracy: 8.33

round  2, metrics=<sparse_categorical_accuracy=0.08266666531562805,loss=2.294863700866699>
2.8374 seconds
Tested. Sparse categorical accuracy: 13.33

round  3, metrics=<sparse_categorical_accuracy=0.10999999940395355,loss=2.27186918258667>
3.4738 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.13366666436195374,loss=2.2429397106170654>
3.0258 seconds
Tested. Sparse categorical accuracy: 30.00

round  5, metrics=<sparse_categorical_accuracy=0.2776666581630707,loss=2.2007529735565186>
3.0427 seconds
Tested. Sparse categorical accuracy: 33.33

round  6, metrics=<sparse_categorical_accuracy=0.37533333897590637,loss=2.1149590015411377>
2.7819 seconds
Tested. Sparse categorical accuracy: 68.33

round  7, metrics=<sparse_categorical_accuracy=0.5473333597183228,loss=2.4325478076934814>
2.9863 seconds
Tested. Sparse categorical accuracy: 11.67

round  8, metrics=<sparse_categorical_accuracy=0.140666663646698,loss=2.2889130115509033>
2.9165 seconds
Tested. Sparse categorical accuracy: 8.33

round  9, metrics=<sparse_categorical_accuracy=0.15299999713897705,loss=2.2746589183807373>
2.9072 seconds
Tested. Sparse categorical accuracy: 46.67

round 10, metrics=<sparse_categorical_accuracy=0.27033331990242004,loss=2.2263872623443604>
2.8097 seconds
Tested. Sparse categorical accuracy: 28.33

round 11, metrics=<sparse_categorical_accuracy=0.3610000014305115,loss=2.075347661972046>
2.9558 seconds
Tested. Sparse categorical accuracy: 60.00

round 12, metrics=<sparse_categorical_accuracy=0.5590000152587891,loss=1.8543879985809326>
2.7705 seconds
Tested. Sparse categorical accuracy: 55.00

round 13, metrics=<sparse_categorical_accuracy=0.5913333296775818,loss=1.4976807832717896>
2.9468 seconds
Tested. Sparse categorical accuracy: 60.00

round 14, metrics=<sparse_categorical_accuracy=0.6970000267028809,loss=1.1470322608947754>
2.9949 seconds
Tested. Sparse categorical accuracy: 66.67

round 15, metrics=<sparse_categorical_accuracy=0.7296666502952576,loss=0.9756938219070435>
2.7029 seconds
Tested. Sparse categorical accuracy: 86.67

round 16, metrics=<sparse_categorical_accuracy=0.8003333210945129,loss=0.6897507309913635>
3.2510 seconds
Tested. Sparse categorical accuracy: 95.00

round 17, metrics=<sparse_categorical_accuracy=0.8443333506584167,loss=0.5792954564094543>
3.0427 seconds
Tested. Sparse categorical accuracy: 78.33

round 18, metrics=<sparse_categorical_accuracy=0.8153333067893982,loss=0.6337435841560364>
3.0932 seconds
Tested. Sparse categorical accuracy: 91.67

round 19, metrics=<sparse_categorical_accuracy=0.8703333139419556,loss=0.43576860427856445>
3.1337 seconds
Tested. Sparse categorical accuracy: 90.00

round 20, metrics=<sparse_categorical_accuracy=0.8486666679382324,loss=0.5341598987579346>
2.6493 seconds
Tested. Sparse categorical accuracy: 90.00

round 21, metrics=<sparse_categorical_accuracy=0.871666669845581,loss=0.40516799688339233>
3.2365 seconds
Tested. Sparse categorical accuracy: 95.00

round 22, metrics=<sparse_categorical_accuracy=0.9100000262260437,loss=0.2907920479774475>
2.8366 seconds
Tested. Sparse categorical accuracy: 90.00

round 23, metrics=<sparse_categorical_accuracy=0.902999997138977,loss=0.31274792551994324>
2.8464 seconds
Tested. Sparse categorical accuracy: 95.00

round 24, metrics=<sparse_categorical_accuracy=0.9110000133514404,loss=0.2886304557323456>
3.1105 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
