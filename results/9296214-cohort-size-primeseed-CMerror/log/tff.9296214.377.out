
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:41:58.386192: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  377
2020-07-15 23:41:57.891447

How often each label is chosen for non-IID data
[18, 18, 22, 16, 15, 22, 23, 26, 22, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14766666293144226,loss=2.282806158065796>
6.3279 seconds
Tested. Sparse categorical accuracy: 26.67

round  2, metrics=<sparse_categorical_accuracy=0.20250000059604645,loss=2.2828094959259033>
5.0105 seconds
Tested. Sparse categorical accuracy: 46.67

round  3, metrics=<sparse_categorical_accuracy=0.3453333377838135,loss=2.21164870262146>
4.7900 seconds
Tested. Sparse categorical accuracy: 66.67

round  4, metrics=<sparse_categorical_accuracy=0.4491666555404663,loss=2.194483995437622>
4.5663 seconds
Tested. Sparse categorical accuracy: 16.67

round  5, metrics=<sparse_categorical_accuracy=0.40950000286102295,loss=2.035914659500122>
4.5194 seconds
Tested. Sparse categorical accuracy: 56.67

round  6, metrics=<sparse_categorical_accuracy=0.5951666831970215,loss=1.5094064474105835>
4.7920 seconds
Tested. Sparse categorical accuracy: 86.67

round  7, metrics=<sparse_categorical_accuracy=0.7513333559036255,loss=0.9168727993965149>
4.6104 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.7933333516120911,loss=0.7682425379753113>
4.4926 seconds
Tested. Sparse categorical accuracy: 90.00

round  9, metrics=<sparse_categorical_accuracy=0.8621666431427002,loss=0.4964035749435425>
4.6452 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8840000033378601,loss=0.40828612446784973>
4.6161 seconds
Tested. Sparse categorical accuracy: 83.33

round 11, metrics=<sparse_categorical_accuracy=0.8634999990463257,loss=0.4761163592338562>
4.2403 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.9226666688919067,loss=0.2711072564125061>
4.3872 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
