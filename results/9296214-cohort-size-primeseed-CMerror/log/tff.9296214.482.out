
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:53:02.407696: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  482
2020-07-15 23:53:01.913410

How often each label is chosen for non-IID data
[24, 20, 19, 15, 21, 17, 23, 21, 21, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12216666340827942,loss=2.2836670875549316>
6.6963 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.11699999868869781,loss=2.2466838359832764>
5.1481 seconds
Tested. Sparse categorical accuracy: 63.33

round  3, metrics=<sparse_categorical_accuracy=0.3544999957084656,loss=2.2047295570373535>
5.4249 seconds
Tested. Sparse categorical accuracy: 43.33

round  4, metrics=<sparse_categorical_accuracy=0.4281666576862335,loss=2.0129611492156982>
5.2926 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.5798333287239075,loss=1.531119465827942>
4.9366 seconds
Tested. Sparse categorical accuracy: 73.33

round  6, metrics=<sparse_categorical_accuracy=0.6306666731834412,loss=1.256087064743042>
5.0350 seconds
Tested. Sparse categorical accuracy: 83.33

round  7, metrics=<sparse_categorical_accuracy=0.7429999709129333,loss=0.8956615328788757>
5.1077 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.8288333415985107,loss=0.5948824286460876>
4.7788 seconds
Tested. Sparse categorical accuracy: 100.00

round  9, metrics=<sparse_categorical_accuracy=0.8410000205039978,loss=0.5476395487785339>
4.9014 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8889999985694885,loss=0.35615894198417664>
5.4140 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8961666822433472,loss=0.33506208658218384>
5.3413 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9198333621025085,loss=0.27049610018730164>
5.2569 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
