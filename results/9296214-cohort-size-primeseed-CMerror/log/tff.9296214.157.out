
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:19:06.814817: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  157
2020-07-15 23:19:06.276529

How often each label is chosen for non-IID data
[19, 21, 21, 20, 22, 17, 22, 24, 22, 12]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13616666197776794,loss=2.2870237827301025>
7.9389 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.1808333396911621,loss=2.2418739795684814>
6.5542 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.3230000138282776,loss=2.115482807159424>
5.4889 seconds
Tested. Sparse categorical accuracy: 60.00

round  4, metrics=<sparse_categorical_accuracy=0.35249999165534973,loss=2.145439863204956>
5.4298 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.5074999928474426,loss=1.6772228479385376>
5.1179 seconds
Tested. Sparse categorical accuracy: 66.67

round  6, metrics=<sparse_categorical_accuracy=0.5708333253860474,loss=1.601775050163269>
6.0419 seconds
Tested. Sparse categorical accuracy: 56.67

round  7, metrics=<sparse_categorical_accuracy=0.6546666622161865,loss=1.1750240325927734>
5.8781 seconds
Tested. Sparse categorical accuracy: 93.33

round  8, metrics=<sparse_categorical_accuracy=0.7919999957084656,loss=0.7247198820114136>
5.8599 seconds
Tested. Sparse categorical accuracy: 63.33

round  9, metrics=<sparse_categorical_accuracy=0.8410000205039978,loss=0.5602223873138428>
6.0897 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8588333129882812,loss=0.48802241683006287>
5.9435 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.903333306312561,loss=0.3169652223587036>
5.3635 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9223333597183228,loss=0.248099222779274>
6.1740 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
