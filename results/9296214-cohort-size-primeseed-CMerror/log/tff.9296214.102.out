
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:13:31.162502: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  102
2020-07-15 23:13:30.661552

How often each label is chosen for non-IID data
[18, 22, 22, 21, 21, 21, 17, 17, 24, 17]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15649999678134918,loss=2.284137725830078>
5.8462 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.20083333551883698,loss=2.235656499862671>
4.1935 seconds
Tested. Sparse categorical accuracy: 63.33

round  3, metrics=<sparse_categorical_accuracy=0.3266666531562805,loss=2.157008647918701>
4.1572 seconds
Tested. Sparse categorical accuracy: 63.33

round  4, metrics=<sparse_categorical_accuracy=0.4138333201408386,loss=2.096823215484619>
4.2653 seconds
Tested. Sparse categorical accuracy: 46.67

round  5, metrics=<sparse_categorical_accuracy=0.500333309173584,loss=1.6534205675125122>
4.1519 seconds
Tested. Sparse categorical accuracy: 83.33

round  6, metrics=<sparse_categorical_accuracy=0.6068333387374878,loss=1.3680251836776733>
4.1492 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.7513333559036255,loss=0.8410125374794006>
4.2181 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8021666407585144,loss=0.6627591848373413>
4.0207 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8654999732971191,loss=0.44732406735420227>
4.2195 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8815000057220459,loss=0.38787946105003357>
4.4686 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.9126666784286499,loss=0.28891444206237793>
4.2336 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.906000018119812,loss=0.2916319668292999>
4.7126 seconds
Tested. Sparse categorical accuracy: 86.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
