
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:52:14.739799: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  477
2020-07-15 23:52:14.225272

How often each label is chosen for non-IID data
[13, 21, 19, 29, 19, 22, 21, 20, 20, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12150000035762787,loss=2.2857160568237305>
5.7523 seconds
Tested. Sparse categorical accuracy: 10.00

round  2, metrics=<sparse_categorical_accuracy=0.1861666738986969,loss=2.237107992172241>
4.2753 seconds
Tested. Sparse categorical accuracy: 46.67

round  3, metrics=<sparse_categorical_accuracy=0.2849999964237213,loss=2.3882319927215576>
4.2055 seconds
Tested. Sparse categorical accuracy: 10.00

round  4, metrics=<sparse_categorical_accuracy=0.14683333039283752,loss=2.2779698371887207>
4.2969 seconds
Tested. Sparse categorical accuracy: 10.00

round  5, metrics=<sparse_categorical_accuracy=0.23800000548362732,loss=2.1861956119537354>
4.2582 seconds
Tested. Sparse categorical accuracy: 16.67

round  6, metrics=<sparse_categorical_accuracy=0.4048333466053009,loss=1.9521636962890625>
4.5185 seconds
Tested. Sparse categorical accuracy: 53.33

round  7, metrics=<sparse_categorical_accuracy=0.5333333611488342,loss=1.742403268814087>
4.3465 seconds
Tested. Sparse categorical accuracy: 43.33

round  8, metrics=<sparse_categorical_accuracy=0.5551666617393494,loss=1.3871427774429321>
4.1566 seconds
Tested. Sparse categorical accuracy: 80.00

round  9, metrics=<sparse_categorical_accuracy=0.7151666879653931,loss=0.9179756045341492>
4.2576 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8258333206176758,loss=0.5963956713676453>
4.4134 seconds
Tested. Sparse categorical accuracy: 93.33

round 11, metrics=<sparse_categorical_accuracy=0.8286666870117188,loss=0.5805573463439941>
4.0135 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.8833333253860474,loss=0.38046684861183167>
4.2083 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
