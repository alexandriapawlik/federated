
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:35:28.323254: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  317
2020-07-15 23:35:27.821636

How often each label is chosen for non-IID data
[20, 29, 20, 19, 18, 19, 16, 16, 22, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15333333611488342,loss=2.285065174102783>
5.9339 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.1979999989271164,loss=2.2429728507995605>
4.3911 seconds
Tested. Sparse categorical accuracy: 23.33

round  3, metrics=<sparse_categorical_accuracy=0.3178333342075348,loss=2.2553958892822266>
4.1411 seconds
Tested. Sparse categorical accuracy: 13.33

round  4, metrics=<sparse_categorical_accuracy=0.35983332991600037,loss=2.0744779109954834>
4.2376 seconds
Tested. Sparse categorical accuracy: 60.00

round  5, metrics=<sparse_categorical_accuracy=0.4950000047683716,loss=1.7967208623886108>
4.1301 seconds
Tested. Sparse categorical accuracy: 56.67

round  6, metrics=<sparse_categorical_accuracy=0.6508333086967468,loss=1.1368542909622192>
4.2302 seconds
Tested. Sparse categorical accuracy: 86.67

round  7, metrics=<sparse_categorical_accuracy=0.7559999823570251,loss=0.8681291341781616>
4.0389 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.8009999990463257,loss=0.7316437363624573>
4.2232 seconds
Tested. Sparse categorical accuracy: 83.33

round  9, metrics=<sparse_categorical_accuracy=0.8383333086967468,loss=0.5477757453918457>
4.0328 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8845000267028809,loss=0.4045092761516571>
4.5134 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8981666564941406,loss=0.3480607867240906>
4.4366 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.9141666889190674,loss=0.284341037273407>
4.1923 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
