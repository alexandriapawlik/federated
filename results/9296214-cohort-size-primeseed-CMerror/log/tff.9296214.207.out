
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:23:58.702692: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  207
2020-07-15 23:23:58.223084

How often each label is chosen for non-IID data
[26, 18, 22, 16, 20, 22, 14, 22, 24, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08166666328907013,loss=2.2865982055664062>
5.8215 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.1354999989271164,loss=2.240661859512329>
4.4673 seconds
Tested. Sparse categorical accuracy: 26.67

round  3, metrics=<sparse_categorical_accuracy=0.29100000858306885,loss=2.2314059734344482>
4.2437 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.3799999952316284,loss=2.0517988204956055>
4.3544 seconds
Tested. Sparse categorical accuracy: 66.67

round  5, metrics=<sparse_categorical_accuracy=0.5018333196640015,loss=1.7914739847183228>
4.2284 seconds
Tested. Sparse categorical accuracy: 70.00

round  6, metrics=<sparse_categorical_accuracy=0.6421666741371155,loss=1.2356470823287964>
4.2375 seconds
Tested. Sparse categorical accuracy: 90.00

round  7, metrics=<sparse_categorical_accuracy=0.7611666917800903,loss=0.8373410105705261>
4.1341 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.7988333106040955,loss=0.7309526205062866>
3.9743 seconds
Tested. Sparse categorical accuracy: 90.00

round  9, metrics=<sparse_categorical_accuracy=0.8759999871253967,loss=0.4099971652030945>
4.4111 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8726666569709778,loss=0.4559852182865143>
4.1043 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.9118333458900452,loss=0.3081631362438202>
3.9154 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.9275000095367432,loss=0.24208226799964905>
4.1279 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
