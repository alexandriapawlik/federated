
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:04:09.936272: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  1
2020-07-15 23:04:08.915748

How often each label is chosen for non-IID data
[13, 26, 22, 22, 16, 20, 24, 16, 23, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12666666507720947,loss=2.3016695976257324>
3.2488 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.09700000286102295,loss=2.2925286293029785>
2.5465 seconds
Tested. Sparse categorical accuracy: 10.00

round  3, metrics=<sparse_categorical_accuracy=0.12133333086967468,loss=2.2794229984283447>
2.3714 seconds
Tested. Sparse categorical accuracy: 28.33

round  4, metrics=<sparse_categorical_accuracy=0.1316666603088379,loss=2.2406089305877686>
2.3490 seconds
Tested. Sparse categorical accuracy: 40.00

round  5, metrics=<sparse_categorical_accuracy=0.23000000417232513,loss=2.1718480587005615>
2.4941 seconds
Tested. Sparse categorical accuracy: 10.00

round  6, metrics=<sparse_categorical_accuracy=0.3779999911785126,loss=1.9665179252624512>
2.2433 seconds
Tested. Sparse categorical accuracy: 40.00

round  7, metrics=<sparse_categorical_accuracy=0.25999999046325684,loss=2.93654727935791>
2.3563 seconds
Tested. Sparse categorical accuracy: 15.00

round  8, metrics=<sparse_categorical_accuracy=0.12166666984558105,loss=2.293154716491699>
2.4177 seconds
Tested. Sparse categorical accuracy: 8.33

round  9, metrics=<sparse_categorical_accuracy=0.11866666376590729,loss=2.2893753051757812>
2.3677 seconds
Tested. Sparse categorical accuracy: 6.67

round 10, metrics=<sparse_categorical_accuracy=0.12533333897590637,loss=2.2764570713043213>
2.3943 seconds
Tested. Sparse categorical accuracy: 13.33

round 11, metrics=<sparse_categorical_accuracy=0.19099999964237213,loss=2.219757080078125>
2.1603 seconds
Tested. Sparse categorical accuracy: 21.67

round 12, metrics=<sparse_categorical_accuracy=0.2709999978542328,loss=2.0708727836608887>
2.3592 seconds
Tested. Sparse categorical accuracy: 21.67

round 13, metrics=<sparse_categorical_accuracy=0.3186666667461395,loss=2.0219483375549316>
2.2908 seconds
Tested. Sparse categorical accuracy: 28.33

round 14, metrics=<sparse_categorical_accuracy=0.4256666600704193,loss=1.6928632259368896>
2.5153 seconds
Tested. Sparse categorical accuracy: 55.00

round 15, metrics=<sparse_categorical_accuracy=0.38233333826065063,loss=2.277390480041504>
2.3310 seconds
Tested. Sparse categorical accuracy: 26.67

round 16, metrics=<sparse_categorical_accuracy=0.3513333201408386,loss=1.8867321014404297>
2.2760 seconds
Tested. Sparse categorical accuracy: 50.00

round 17, metrics=<sparse_categorical_accuracy=0.47733333706855774,loss=1.5686603784561157>
2.3040 seconds
Tested. Sparse categorical accuracy: 53.33

round 18, metrics=<sparse_categorical_accuracy=0.5619999766349792,loss=1.462420105934143>
2.0858 seconds
Tested. Sparse categorical accuracy: 73.33

round 19, metrics=<sparse_categorical_accuracy=0.6443333625793457,loss=1.1379365921020508>
2.2595 seconds
Tested. Sparse categorical accuracy: 85.00

round 20, metrics=<sparse_categorical_accuracy=0.734333336353302,loss=0.8595514297485352>
2.5023 seconds
Tested. Sparse categorical accuracy: 85.00

round 21, metrics=<sparse_categorical_accuracy=0.737333357334137,loss=0.8986969590187073>
2.2797 seconds
Tested. Sparse categorical accuracy: 80.00

round 22, metrics=<sparse_categorical_accuracy=0.7519999742507935,loss=0.8041728734970093>
2.5795 seconds
Tested. Sparse categorical accuracy: 85.00

round 23, metrics=<sparse_categorical_accuracy=0.8146666884422302,loss=0.6052473187446594>
2.4138 seconds
Tested. Sparse categorical accuracy: 60.00

round 24, metrics=<sparse_categorical_accuracy=0.8446666598320007,loss=0.5136129260063171>
2.3560 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
