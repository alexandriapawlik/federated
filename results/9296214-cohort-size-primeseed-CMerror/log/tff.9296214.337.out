
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:37:43.383346: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  337
2020-07-15 23:37:42.893175

How often each label is chosen for non-IID data
[18, 22, 23, 23, 14, 20, 19, 19, 22, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1446666717529297,loss=2.288912057876587>
5.8354 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.12166666984558105,loss=2.267723560333252>
4.5730 seconds
Tested. Sparse categorical accuracy: 36.67

round  3, metrics=<sparse_categorical_accuracy=0.25850000977516174,loss=2.1711318492889404>
4.4384 seconds
Tested. Sparse categorical accuracy: 43.33

round  4, metrics=<sparse_categorical_accuracy=0.33000001311302185,loss=2.2911598682403564>
4.2271 seconds
Tested. Sparse categorical accuracy: 26.67

round  5, metrics=<sparse_categorical_accuracy=0.3791666626930237,loss=2.0015640258789062>
4.3654 seconds
Tested. Sparse categorical accuracy: 56.67

round  6, metrics=<sparse_categorical_accuracy=0.5268333554267883,loss=1.560032844543457>
4.4836 seconds
Tested. Sparse categorical accuracy: 80.00

round  7, metrics=<sparse_categorical_accuracy=0.6625000238418579,loss=1.069200873374939>
4.5985 seconds
Tested. Sparse categorical accuracy: 76.67

round  8, metrics=<sparse_categorical_accuracy=0.7261666655540466,loss=0.8947275280952454>
4.2559 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8461666703224182,loss=0.5165739059448242>
4.3511 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8793333172798157,loss=0.4038953185081482>
4.4559 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8880000114440918,loss=0.37657442688941956>
4.0677 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.9175000190734863,loss=0.27507856488227844>
4.0099 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
