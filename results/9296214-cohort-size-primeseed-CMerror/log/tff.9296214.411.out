
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:45:32.094583: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  411
2020-07-15 23:45:31.616572

How often each label is chosen for non-IID data
[22, 22, 18, 23, 22, 18, 20, 25, 15, 15]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1263333261013031,loss=2.302372455596924>
2.9383 seconds
Tested. Sparse categorical accuracy: 11.67

round  2, metrics=<sparse_categorical_accuracy=0.11299999803304672,loss=2.2965731620788574>
2.1780 seconds
Tested. Sparse categorical accuracy: 15.00

round  3, metrics=<sparse_categorical_accuracy=0.15533334016799927,loss=2.2831740379333496>
2.1628 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.1433333307504654,loss=2.2559874057769775>
2.0994 seconds
Tested. Sparse categorical accuracy: 21.67

round  5, metrics=<sparse_categorical_accuracy=0.1523333340883255,loss=2.2224113941192627>
2.1906 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.30933332443237305,loss=2.113532781600952>
2.0402 seconds
Tested. Sparse categorical accuracy: 58.33

round  7, metrics=<sparse_categorical_accuracy=0.34966665506362915,loss=2.2628180980682373>
2.1628 seconds
Tested. Sparse categorical accuracy: 38.33

round  8, metrics=<sparse_categorical_accuracy=0.4013333320617676,loss=2.0306270122528076>
2.0497 seconds
Tested. Sparse categorical accuracy: 61.67

round  9, metrics=<sparse_categorical_accuracy=0.4546666741371155,loss=2.11153507232666>
2.1213 seconds
Tested. Sparse categorical accuracy: 60.00

round 10, metrics=<sparse_categorical_accuracy=0.5273333191871643,loss=1.6288095712661743>
2.0397 seconds
Tested. Sparse categorical accuracy: 63.33

round 11, metrics=<sparse_categorical_accuracy=0.6666666865348816,loss=1.1892828941345215>
2.0697 seconds
Tested. Sparse categorical accuracy: 78.33

round 12, metrics=<sparse_categorical_accuracy=0.7246666550636292,loss=0.9493837952613831>
2.1537 seconds
Tested. Sparse categorical accuracy: 73.33

round 13, metrics=<sparse_categorical_accuracy=0.7283333539962769,loss=0.9307616353034973>
2.0461 seconds
Tested. Sparse categorical accuracy: 86.67

round 14, metrics=<sparse_categorical_accuracy=0.8253333568572998,loss=0.6299224495887756>
2.1468 seconds
Tested. Sparse categorical accuracy: 80.00

round 15, metrics=<sparse_categorical_accuracy=0.8206666707992554,loss=0.6485883593559265>
1.9610 seconds
Tested. Sparse categorical accuracy: 85.00

round 16, metrics=<sparse_categorical_accuracy=0.8080000281333923,loss=0.649745523929596>
1.9722 seconds
Tested. Sparse categorical accuracy: 91.67

round 17, metrics=<sparse_categorical_accuracy=0.8813333511352539,loss=0.42786967754364014>
2.1808 seconds
Tested. Sparse categorical accuracy: 91.67

round 18, metrics=<sparse_categorical_accuracy=0.8993333578109741,loss=0.34719905257225037>
2.0311 seconds
Tested. Sparse categorical accuracy: 95.00

round 19, metrics=<sparse_categorical_accuracy=0.9169999957084656,loss=0.27435970306396484>
1.9960 seconds
Tested. Sparse categorical accuracy: 91.67

round 20, metrics=<sparse_categorical_accuracy=0.906000018119812,loss=0.317116916179657>
2.1269 seconds
Tested. Sparse categorical accuracy: 98.33

round 21, metrics=<sparse_categorical_accuracy=0.8926666378974915,loss=0.34100306034088135>
1.9997 seconds
Tested. Sparse categorical accuracy: 96.67

round 22, metrics=<sparse_categorical_accuracy=0.9196666479110718,loss=0.26743245124816895>
2.0080 seconds
Tested. Sparse categorical accuracy: 95.00

round 23, metrics=<sparse_categorical_accuracy=0.9133333563804626,loss=0.2994981110095978>
2.2028 seconds
Tested. Sparse categorical accuracy: 96.67

round 24, metrics=<sparse_categorical_accuracy=0.9363333582878113,loss=0.21254080533981323>
2.0116 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
