
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:45:06.835628: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  407
2020-07-15 23:45:06.333653

How often each label is chosen for non-IID data
[25, 16, 15, 29, 19, 20, 17, 19, 21, 19]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14116667211055756,loss=2.281167984008789>
6.0765 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.14800000190734863,loss=2.2546567916870117>
4.4597 seconds
Tested. Sparse categorical accuracy: 40.00

round  3, metrics=<sparse_categorical_accuracy=0.27133333683013916,loss=2.173475503921509>
4.4818 seconds
Tested. Sparse categorical accuracy: 60.00

round  4, metrics=<sparse_categorical_accuracy=0.3179999887943268,loss=2.315826416015625>
4.2269 seconds
Tested. Sparse categorical accuracy: 33.33

round  5, metrics=<sparse_categorical_accuracy=0.3790000081062317,loss=2.1151275634765625>
4.4191 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.4440000057220459,loss=1.9605906009674072>
4.4534 seconds
Tested. Sparse categorical accuracy: 56.67

round  7, metrics=<sparse_categorical_accuracy=0.5435000061988831,loss=1.5200512409210205>
4.2021 seconds
Tested. Sparse categorical accuracy: 80.00

round  8, metrics=<sparse_categorical_accuracy=0.6681666374206543,loss=1.124779224395752>
4.3247 seconds
Tested. Sparse categorical accuracy: 80.00

round  9, metrics=<sparse_categorical_accuracy=0.8044999837875366,loss=0.6416139602661133>
4.3668 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8109999895095825,loss=0.7152348756790161>
4.2134 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.875333309173584,loss=0.5062228441238403>
4.1055 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.9008333086967468,loss=0.3455849289894104>
4.2395 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
