
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:04:09.843070: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  7
2020-07-15 23:04:08.915833

How often each label is chosen for non-IID data
[22, 21, 23, 23, 12, 24, 16, 19, 22, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.10400000214576721,loss=2.287907600402832>
5.8516 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.15466666221618652,loss=2.2432494163513184>
4.4665 seconds
Tested. Sparse categorical accuracy: 53.33

round  3, metrics=<sparse_categorical_accuracy=0.30649998784065247,loss=2.3285598754882812>
4.2369 seconds
Tested. Sparse categorical accuracy: 3.33

round  4, metrics=<sparse_categorical_accuracy=0.1379999965429306,loss=2.279290199279785>
4.3003 seconds
Tested. Sparse categorical accuracy: 16.67

round  5, metrics=<sparse_categorical_accuracy=0.23883333802223206,loss=2.1920340061187744>
4.1908 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.4816666543483734,loss=1.921076774597168>
4.2738 seconds
Tested. Sparse categorical accuracy: 56.67

round  7, metrics=<sparse_categorical_accuracy=0.559166669845581,loss=1.689792275428772>
4.3254 seconds
Tested. Sparse categorical accuracy: 63.33

round  8, metrics=<sparse_categorical_accuracy=0.6669999957084656,loss=1.180629849433899>
4.0965 seconds
Tested. Sparse categorical accuracy: 73.33

round  9, metrics=<sparse_categorical_accuracy=0.7615000009536743,loss=0.8216953277587891>
4.3028 seconds
Tested. Sparse categorical accuracy: 70.00

round 10, metrics=<sparse_categorical_accuracy=0.8166666626930237,loss=0.6126084923744202>
4.0415 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8603333234786987,loss=0.48068681359291077>
3.9589 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.890500009059906,loss=0.3562476933002472>
4.2163 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
