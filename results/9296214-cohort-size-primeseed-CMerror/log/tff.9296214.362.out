
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:40:18.777889: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  362
2020-07-15 23:40:18.292091

How often each label is chosen for non-IID data
[17, 20, 21, 23, 13, 22, 20, 25, 19, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.1509999930858612,loss=2.2853145599365234>
5.7728 seconds
Tested. Sparse categorical accuracy: 43.33

round  2, metrics=<sparse_categorical_accuracy=0.21266666054725647,loss=2.2646965980529785>
4.1298 seconds
Tested. Sparse categorical accuracy: 26.67

round  3, metrics=<sparse_categorical_accuracy=0.29616665840148926,loss=2.2766036987304688>
4.2340 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.34816667437553406,loss=2.1070797443389893>
4.2599 seconds
Tested. Sparse categorical accuracy: 50.00

round  5, metrics=<sparse_categorical_accuracy=0.41583332419395447,loss=1.940548300743103>
4.0730 seconds
Tested. Sparse categorical accuracy: 43.33

round  6, metrics=<sparse_categorical_accuracy=0.5845000147819519,loss=1.4559980630874634>
4.0607 seconds
Tested. Sparse categorical accuracy: 56.67

round  7, metrics=<sparse_categorical_accuracy=0.700166642665863,loss=0.995276689529419>
4.2272 seconds
Tested. Sparse categorical accuracy: 83.33

round  8, metrics=<sparse_categorical_accuracy=0.7768333554267883,loss=0.7279449701309204>
4.0201 seconds
Tested. Sparse categorical accuracy: 90.00

round  9, metrics=<sparse_categorical_accuracy=0.8338333368301392,loss=0.5677890181541443>
3.8873 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8808333277702332,loss=0.3880409300327301>
4.1559 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8988333344459534,loss=0.33948084712028503>
3.9214 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.9068333506584167,loss=0.3003167510032654>
4.1786 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
