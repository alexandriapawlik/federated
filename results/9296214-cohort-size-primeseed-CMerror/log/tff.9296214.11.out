
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:04:09.934659: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  11
2020-07-15 23:04:08.915789

How often each label is chosen for non-IID data
[20, 25, 15, 15, 24, 18, 16, 24, 18, 25]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08900000154972076,loss=2.3015551567077637>
3.1371 seconds
Tested. Sparse categorical accuracy: 11.67

round  2, metrics=<sparse_categorical_accuracy=0.10533333569765091,loss=2.2944071292877197>
2.1678 seconds
Tested. Sparse categorical accuracy: 15.00

round  3, metrics=<sparse_categorical_accuracy=0.1263333261013031,loss=2.275313138961792>
2.2490 seconds
Tested. Sparse categorical accuracy: 18.33

round  4, metrics=<sparse_categorical_accuracy=0.16333332657814026,loss=2.247427463531494>
2.0990 seconds
Tested. Sparse categorical accuracy: 13.33

round  5, metrics=<sparse_categorical_accuracy=0.21966665983200073,loss=2.1569485664367676>
2.2266 seconds
Tested. Sparse categorical accuracy: 25.00

round  6, metrics=<sparse_categorical_accuracy=0.3230000138282776,loss=2.3603713512420654>
2.0696 seconds
Tested. Sparse categorical accuracy: 51.67

round  7, metrics=<sparse_categorical_accuracy=0.2823333442211151,loss=2.2412116527557373>
2.2047 seconds
Tested. Sparse categorical accuracy: 25.00

round  8, metrics=<sparse_categorical_accuracy=0.2893333435058594,loss=2.131871223449707>
2.1108 seconds
Tested. Sparse categorical accuracy: 41.67

round  9, metrics=<sparse_categorical_accuracy=0.4413333237171173,loss=2.0337002277374268>
2.2317 seconds
Tested. Sparse categorical accuracy: 30.00

round 10, metrics=<sparse_categorical_accuracy=0.41200000047683716,loss=1.8734278678894043>
2.0579 seconds
Tested. Sparse categorical accuracy: 68.33

round 11, metrics=<sparse_categorical_accuracy=0.5929999947547913,loss=1.5207469463348389>
2.0281 seconds
Tested. Sparse categorical accuracy: 63.33

round 12, metrics=<sparse_categorical_accuracy=0.6503333449363708,loss=1.4063297510147095>
2.1495 seconds
Tested. Sparse categorical accuracy: 60.00

round 13, metrics=<sparse_categorical_accuracy=0.7056666612625122,loss=0.9624500274658203>
2.0388 seconds
Tested. Sparse categorical accuracy: 83.33

round 14, metrics=<sparse_categorical_accuracy=0.7583333253860474,loss=0.8561049103736877>
2.2181 seconds
Tested. Sparse categorical accuracy: 85.00

round 15, metrics=<sparse_categorical_accuracy=0.8103333115577698,loss=0.631689190864563>
2.0198 seconds
Tested. Sparse categorical accuracy: 80.00

round 16, metrics=<sparse_categorical_accuracy=0.8523333072662354,loss=0.49406978487968445>
2.0527 seconds
Tested. Sparse categorical accuracy: 70.00

round 17, metrics=<sparse_categorical_accuracy=0.8473333120346069,loss=0.5323088765144348>
2.1956 seconds
Tested. Sparse categorical accuracy: 86.67

round 18, metrics=<sparse_categorical_accuracy=0.859000027179718,loss=0.5113538503646851>
2.0686 seconds
Tested. Sparse categorical accuracy: 88.33

round 19, metrics=<sparse_categorical_accuracy=0.9013333320617676,loss=0.35541093349456787>
2.0239 seconds
Tested. Sparse categorical accuracy: 86.67

round 20, metrics=<sparse_categorical_accuracy=0.9006666541099548,loss=0.3243984580039978>
2.1879 seconds
Tested. Sparse categorical accuracy: 93.33

round 21, metrics=<sparse_categorical_accuracy=0.9179999828338623,loss=0.2837914526462555>
2.0528 seconds
Tested. Sparse categorical accuracy: 95.00

round 22, metrics=<sparse_categorical_accuracy=0.8999999761581421,loss=0.35121601819992065>
2.2097 seconds
Tested. Sparse categorical accuracy: 71.67

round 23, metrics=<sparse_categorical_accuracy=0.9120000004768372,loss=0.2894516885280609>
1.9987 seconds
Tested. Sparse categorical accuracy: 88.33

round 24, metrics=<sparse_categorical_accuracy=0.9290000200271606,loss=0.23998986184597015>
2.0520 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
