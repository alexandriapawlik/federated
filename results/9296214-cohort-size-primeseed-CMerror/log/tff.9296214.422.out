
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:46:36.276525: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  422
2020-07-15 23:46:35.797576

How often each label is chosen for non-IID data
[18, 20, 16, 27, 22, 21, 17, 20, 17, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12849999964237213,loss=2.2864537239074707>
5.6164 seconds
Tested. Sparse categorical accuracy: 23.33

round  2, metrics=<sparse_categorical_accuracy=0.1756666600704193,loss=2.251117467880249>
4.1504 seconds
Tested. Sparse categorical accuracy: 43.33

round  3, metrics=<sparse_categorical_accuracy=0.2876666784286499,loss=2.2095067501068115>
4.2385 seconds
Tested. Sparse categorical accuracy: 40.00

round  4, metrics=<sparse_categorical_accuracy=0.38199999928474426,loss=2.1877505779266357>
4.1484 seconds
Tested. Sparse categorical accuracy: 30.00

round  5, metrics=<sparse_categorical_accuracy=0.45483332872390747,loss=1.8828988075256348>
4.1477 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.5941666960716248,loss=1.4119529724121094>
4.1998 seconds
Tested. Sparse categorical accuracy: 63.33

round  7, metrics=<sparse_categorical_accuracy=0.7436666488647461,loss=0.8659547567367554>
4.0742 seconds
Tested. Sparse categorical accuracy: 80.00

round  8, metrics=<sparse_categorical_accuracy=0.8246666789054871,loss=0.6337360143661499>
3.8700 seconds
Tested. Sparse categorical accuracy: 96.67

round  9, metrics=<sparse_categorical_accuracy=0.8448333144187927,loss=0.5353212356567383>
4.1347 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8868333101272583,loss=0.3887541890144348>
3.8124 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.9049999713897705,loss=0.3185351490974426>
4.1947 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.9114999771118164,loss=0.2832626700401306>
4.0710 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
