
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:50:13.756174: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  457
2020-07-15 23:50:13.277741

How often each label is chosen for non-IID data
[19, 23, 29, 17, 16, 21, 17, 14, 22, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11100000143051147,loss=2.2885966300964355>
5.5676 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.17033334076404572,loss=2.241229772567749>
4.1831 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.31850001215934753,loss=2.073117256164551>
4.1181 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.3095000088214874,loss=2.3364994525909424>
3.9596 seconds
Tested. Sparse categorical accuracy: 16.67

round  5, metrics=<sparse_categorical_accuracy=0.17599999904632568,loss=2.2553303241729736>
3.9363 seconds
Tested. Sparse categorical accuracy: 26.67

round  6, metrics=<sparse_categorical_accuracy=0.39766666293144226,loss=2.0560696125030518>
4.0880 seconds
Tested. Sparse categorical accuracy: 83.33

round  7, metrics=<sparse_categorical_accuracy=0.559166669845581,loss=1.5461933612823486>
3.9755 seconds
Tested. Sparse categorical accuracy: 56.67

round  8, metrics=<sparse_categorical_accuracy=0.6948333382606506,loss=1.0370689630508423>
3.8118 seconds
Tested. Sparse categorical accuracy: 70.00

round  9, metrics=<sparse_categorical_accuracy=0.7823333144187927,loss=0.7213665246963501>
3.9771 seconds
Tested. Sparse categorical accuracy: 76.67

round 10, metrics=<sparse_categorical_accuracy=0.8309999704360962,loss=0.5837950110435486>
3.9743 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8756666779518127,loss=0.4385596811771393>
3.9549 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.9014999866485596,loss=0.3326234519481659>
3.8147 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
