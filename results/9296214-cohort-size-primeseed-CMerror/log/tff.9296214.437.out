
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:48:05.038311: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  437
2020-07-15 23:48:04.538784

How often each label is chosen for non-IID data
[20, 19, 24, 22, 16, 21, 23, 15, 19, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14083333313465118,loss=2.2841134071350098>
6.2020 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.17149999737739563,loss=2.251983404159546>
4.6411 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.3070000112056732,loss=2.247009038925171>
4.6172 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.3191666603088379,loss=2.1035943031311035>
4.4074 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.46916666626930237,loss=1.9710907936096191>
4.5875 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.5450000166893005,loss=1.5117112398147583>
4.5059 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.6976666450500488,loss=1.0169563293457031>
4.5355 seconds
Tested. Sparse categorical accuracy: 93.33

round  8, metrics=<sparse_categorical_accuracy=0.7839999794960022,loss=0.7227787971496582>
4.2108 seconds
Tested. Sparse categorical accuracy: 76.67

round  9, metrics=<sparse_categorical_accuracy=0.8460000157356262,loss=0.5577639937400818>
4.4701 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8809999823570251,loss=0.40531980991363525>
4.4948 seconds
Tested. Sparse categorical accuracy: 90.00

round 11, metrics=<sparse_categorical_accuracy=0.8838333487510681,loss=0.4114099442958832>
4.3616 seconds
Tested. Sparse categorical accuracy: 100.00

round 12, metrics=<sparse_categorical_accuracy=0.9253333210945129,loss=0.25845038890838623>
4.6724 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
