
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:39:58.948945: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  357
2020-07-15 23:39:58.466223

How often each label is chosen for non-IID data
[20, 13, 21, 27, 21, 18, 22, 17, 19, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13333334028720856,loss=2.2831645011901855>
6.9354 seconds
Tested. Sparse categorical accuracy: 3.33

round  2, metrics=<sparse_categorical_accuracy=0.11400000005960464,loss=2.2266945838928223>
5.2102 seconds
Tested. Sparse categorical accuracy: 20.00

round  3, metrics=<sparse_categorical_accuracy=0.2993333339691162,loss=2.1966981887817383>
5.2449 seconds
Tested. Sparse categorical accuracy: 43.33

round  4, metrics=<sparse_categorical_accuracy=0.3766666650772095,loss=2.255401134490967>
5.2168 seconds
Tested. Sparse categorical accuracy: 53.33

round  5, metrics=<sparse_categorical_accuracy=0.47216665744781494,loss=1.831470012664795>
5.0540 seconds
Tested. Sparse categorical accuracy: 66.67

round  6, metrics=<sparse_categorical_accuracy=0.5335000157356262,loss=1.6000192165374756>
4.8100 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.7036666870117188,loss=1.0013052225112915>
4.7851 seconds
Tested. Sparse categorical accuracy: 70.00

round  8, metrics=<sparse_categorical_accuracy=0.8151666522026062,loss=0.6330724954605103>
4.9653 seconds
Tested. Sparse categorical accuracy: 93.33

round  9, metrics=<sparse_categorical_accuracy=0.8528333306312561,loss=0.5273232460021973>
5.1163 seconds
Tested. Sparse categorical accuracy: 96.67

round 10, metrics=<sparse_categorical_accuracy=0.8809999823570251,loss=0.4058249890804291>
4.6393 seconds
Tested. Sparse categorical accuracy: 83.33

round 11, metrics=<sparse_categorical_accuracy=0.8980000019073486,loss=0.340433806180954>
5.2703 seconds
Tested. Sparse categorical accuracy: 93.33

round 12, metrics=<sparse_categorical_accuracy=0.9306666851043701,loss=0.2265404313802719>
5.0648 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
