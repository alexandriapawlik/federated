
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:06:35.636588: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  32
2020-07-15 23:06:35.151618

How often each label is chosen for non-IID data
[21, 25, 23, 15, 22, 26, 16, 23, 13, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12333333492279053,loss=2.291043519973755>
5.8872 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.14300000667572021,loss=2.2526793479919434>
4.3102 seconds
Tested. Sparse categorical accuracy: 60.00

round  3, metrics=<sparse_categorical_accuracy=0.304833322763443,loss=2.2221624851226807>
4.1578 seconds
Tested. Sparse categorical accuracy: 23.33

round  4, metrics=<sparse_categorical_accuracy=0.3018333315849304,loss=2.038667917251587>
4.4387 seconds
Tested. Sparse categorical accuracy: 33.33

round  5, metrics=<sparse_categorical_accuracy=0.4676666557788849,loss=1.8517038822174072>
4.1493 seconds
Tested. Sparse categorical accuracy: 46.67

round  6, metrics=<sparse_categorical_accuracy=0.6016666889190674,loss=1.3080074787139893>
4.5160 seconds
Tested. Sparse categorical accuracy: 63.33

round  7, metrics=<sparse_categorical_accuracy=0.6981666684150696,loss=1.0255074501037598>
4.1221 seconds
Tested. Sparse categorical accuracy: 66.67

round  8, metrics=<sparse_categorical_accuracy=0.8184999823570251,loss=0.6347196698188782>
4.1173 seconds
Tested. Sparse categorical accuracy: 96.67

round  9, metrics=<sparse_categorical_accuracy=0.8508333563804626,loss=0.521560549736023>
4.2495 seconds
Tested. Sparse categorical accuracy: 86.67

round 10, metrics=<sparse_categorical_accuracy=0.8796666860580444,loss=0.39343374967575073>
4.0941 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.9046666622161865,loss=0.30441105365753174>
4.1488 seconds
Tested. Sparse categorical accuracy: 90.00

round 12, metrics=<sparse_categorical_accuracy=0.8958333134651184,loss=0.34820401668548584>
4.2061 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
