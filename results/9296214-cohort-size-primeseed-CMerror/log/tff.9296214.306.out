
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:34:20.294847: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  306
2020-07-15 23:34:19.803227

How often each label is chosen for non-IID data
[30, 16, 14, 22, 25, 18, 20, 26, 15, 14]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11533333361148834,loss=2.3047854900360107>
2.8769 seconds
Tested. Sparse categorical accuracy: 15.00

round  2, metrics=<sparse_categorical_accuracy=0.16033333539962769,loss=2.2915072441101074>
2.1814 seconds
Tested. Sparse categorical accuracy: 35.00

round  3, metrics=<sparse_categorical_accuracy=0.15166667103767395,loss=2.2728824615478516>
2.3648 seconds
Tested. Sparse categorical accuracy: 20.00

round  4, metrics=<sparse_categorical_accuracy=0.1340000033378601,loss=2.2421162128448486>
2.0740 seconds
Tested. Sparse categorical accuracy: 23.33

round  5, metrics=<sparse_categorical_accuracy=0.1860000044107437,loss=2.1722750663757324>
2.2403 seconds
Tested. Sparse categorical accuracy: 53.33

round  6, metrics=<sparse_categorical_accuracy=0.29466667771339417,loss=2.3451907634735107>
2.1654 seconds
Tested. Sparse categorical accuracy: 41.67

round  7, metrics=<sparse_categorical_accuracy=0.31333333253860474,loss=2.2017226219177246>
2.3324 seconds
Tested. Sparse categorical accuracy: 53.33

round  8, metrics=<sparse_categorical_accuracy=0.4180000126361847,loss=1.9715508222579956>
2.0916 seconds
Tested. Sparse categorical accuracy: 61.67

round  9, metrics=<sparse_categorical_accuracy=0.3889999985694885,loss=2.3476099967956543>
2.3481 seconds
Tested. Sparse categorical accuracy: 36.67

round 10, metrics=<sparse_categorical_accuracy=0.3636666536331177,loss=2.1434991359710693>
2.1068 seconds
Tested. Sparse categorical accuracy: 61.67

round 11, metrics=<sparse_categorical_accuracy=0.43299999833106995,loss=1.8271969556808472>
2.0438 seconds
Tested. Sparse categorical accuracy: 46.67

round 12, metrics=<sparse_categorical_accuracy=0.5339999794960022,loss=1.5371874570846558>
2.2876 seconds
Tested. Sparse categorical accuracy: 83.33

round 13, metrics=<sparse_categorical_accuracy=0.6853333115577698,loss=1.2331544160842896>
2.1486 seconds
Tested. Sparse categorical accuracy: 73.33

round 14, metrics=<sparse_categorical_accuracy=0.5346666574478149,loss=1.8590468168258667>
2.2009 seconds
Tested. Sparse categorical accuracy: 50.00

round 15, metrics=<sparse_categorical_accuracy=0.5659999847412109,loss=1.3728513717651367>
2.0583 seconds
Tested. Sparse categorical accuracy: 70.00

round 16, metrics=<sparse_categorical_accuracy=0.6863333582878113,loss=1.07850182056427>
2.0924 seconds
Tested. Sparse categorical accuracy: 86.67

round 17, metrics=<sparse_categorical_accuracy=0.7436666488647461,loss=0.7799887657165527>
2.2393 seconds
Tested. Sparse categorical accuracy: 85.00

round 18, metrics=<sparse_categorical_accuracy=0.8633333444595337,loss=0.478261798620224>
2.0846 seconds
Tested. Sparse categorical accuracy: 91.67

round 19, metrics=<sparse_categorical_accuracy=0.8663333058357239,loss=0.4770625829696655>
2.0123 seconds
Tested. Sparse categorical accuracy: 88.33

round 20, metrics=<sparse_categorical_accuracy=0.8629999756813049,loss=0.47219690680503845>
2.2207 seconds
Tested. Sparse categorical accuracy: 85.00

round 21, metrics=<sparse_categorical_accuracy=0.8830000162124634,loss=0.41854146122932434>
2.1077 seconds
Tested. Sparse categorical accuracy: 98.33

round 22, metrics=<sparse_categorical_accuracy=0.9136666655540466,loss=0.30012521147727966>
2.2219 seconds
Tested. Sparse categorical accuracy: 88.33

round 23, metrics=<sparse_categorical_accuracy=0.9283333420753479,loss=0.2543199956417084>
2.1129 seconds
Tested. Sparse categorical accuracy: 91.67

round 24, metrics=<sparse_categorical_accuracy=0.9126666784286499,loss=0.2814801335334778>
2.1187 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
