
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:34:58.783392: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  311
2020-07-15 23:34:58.251167

How often each label is chosen for non-IID data
[20, 25, 17, 16, 26, 24, 17, 22, 17, 16]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.12533333897590637,loss=2.3033981323242188>
4.0826 seconds
Tested. Sparse categorical accuracy: 6.67

round  2, metrics=<sparse_categorical_accuracy=0.0820000022649765,loss=2.2934932708740234>
2.9338 seconds
Tested. Sparse categorical accuracy: 23.33

round  3, metrics=<sparse_categorical_accuracy=0.16066665947437286,loss=2.273503303527832>
2.6109 seconds
Tested. Sparse categorical accuracy: 43.33

round  4, metrics=<sparse_categorical_accuracy=0.3696666657924652,loss=2.216395139694214>
2.8953 seconds
Tested. Sparse categorical accuracy: 35.00

round  5, metrics=<sparse_categorical_accuracy=0.29633334279060364,loss=2.2702014446258545>
3.1110 seconds
Tested. Sparse categorical accuracy: 31.67

round  6, metrics=<sparse_categorical_accuracy=0.31066668033599854,loss=2.203157424926758>
2.5209 seconds
Tested. Sparse categorical accuracy: 40.00

round  7, metrics=<sparse_categorical_accuracy=0.41333332657814026,loss=1.9893102645874023>
3.4390 seconds
Tested. Sparse categorical accuracy: 35.00

round  8, metrics=<sparse_categorical_accuracy=0.4483333230018616,loss=1.8345359563827515>
2.9054 seconds
Tested. Sparse categorical accuracy: 38.33

round  9, metrics=<sparse_categorical_accuracy=0.4206666648387909,loss=1.7106342315673828>
3.0161 seconds
Tested. Sparse categorical accuracy: 58.33

round 10, metrics=<sparse_categorical_accuracy=0.6019999980926514,loss=1.6401081085205078>
2.6950 seconds
Tested. Sparse categorical accuracy: 56.67

round 11, metrics=<sparse_categorical_accuracy=0.628333330154419,loss=1.2527095079421997>
3.3440 seconds
Tested. Sparse categorical accuracy: 65.00

round 12, metrics=<sparse_categorical_accuracy=0.6586666703224182,loss=1.2874051332473755>
2.8327 seconds
Tested. Sparse categorical accuracy: 70.00

round 13, metrics=<sparse_categorical_accuracy=0.6480000019073486,loss=1.0593336820602417>
2.7919 seconds
Tested. Sparse categorical accuracy: 68.33

round 14, metrics=<sparse_categorical_accuracy=0.7540000081062317,loss=0.7903769612312317>
3.2274 seconds
Tested. Sparse categorical accuracy: 90.00

round 15, metrics=<sparse_categorical_accuracy=0.8083333373069763,loss=0.6938592195510864>
2.8788 seconds
Tested. Sparse categorical accuracy: 88.33

round 16, metrics=<sparse_categorical_accuracy=0.8159999847412109,loss=0.5934059619903564>
3.1466 seconds
Tested. Sparse categorical accuracy: 88.33

round 17, metrics=<sparse_categorical_accuracy=0.8566666841506958,loss=0.49386152625083923>
2.7045 seconds
Tested. Sparse categorical accuracy: 93.33

round 18, metrics=<sparse_categorical_accuracy=0.8533333539962769,loss=0.527201235294342>
3.1945 seconds
Tested. Sparse categorical accuracy: 93.33

round 19, metrics=<sparse_categorical_accuracy=0.9073333144187927,loss=0.34275197982788086>
2.8349 seconds
Tested. Sparse categorical accuracy: 90.00

round 20, metrics=<sparse_categorical_accuracy=0.871666669845581,loss=0.44732362031936646>
2.8273 seconds
Tested. Sparse categorical accuracy: 95.00

round 21, metrics=<sparse_categorical_accuracy=0.8920000195503235,loss=0.35399341583251953>
3.0815 seconds
Tested. Sparse categorical accuracy: 91.67

round 22, metrics=<sparse_categorical_accuracy=0.8939999938011169,loss=0.33338770270347595>
2.7465 seconds
Tested. Sparse categorical accuracy: 98.33

round 23, metrics=<sparse_categorical_accuracy=0.9143333435058594,loss=0.28583112359046936>
2.8366 seconds
Tested. Sparse categorical accuracy: 95.00

round 24, metrics=<sparse_categorical_accuracy=0.9263333082199097,loss=0.2373700588941574>
3.3371 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
