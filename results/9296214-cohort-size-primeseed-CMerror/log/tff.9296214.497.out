
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:54:32.911439: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  497
2020-07-15 23:54:32.429260

How often each label is chosen for non-IID data
[16, 20, 21, 24, 17, 21, 21, 19, 23, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08733333647251129,loss=2.2870123386383057>
5.8106 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.13966666162014008,loss=2.232802152633667>
4.1418 seconds
Tested. Sparse categorical accuracy: 56.67

round  3, metrics=<sparse_categorical_accuracy=0.3343333303928375,loss=2.2377054691314697>
4.2600 seconds
Tested. Sparse categorical accuracy: 36.67

round  4, metrics=<sparse_categorical_accuracy=0.40450000762939453,loss=2.074970006942749>
4.1095 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.4715000092983246,loss=1.8969799280166626>
4.1059 seconds
Tested. Sparse categorical accuracy: 56.67

round  6, metrics=<sparse_categorical_accuracy=0.5979999899864197,loss=1.3619375228881836>
4.2275 seconds
Tested. Sparse categorical accuracy: 83.33

round  7, metrics=<sparse_categorical_accuracy=0.7204999923706055,loss=0.8860910534858704>
3.8393 seconds
Tested. Sparse categorical accuracy: 70.00

round  8, metrics=<sparse_categorical_accuracy=0.8263333439826965,loss=0.5842971801757812>
4.1063 seconds
Tested. Sparse categorical accuracy: 83.33

round  9, metrics=<sparse_categorical_accuracy=0.8331666588783264,loss=0.5672974586486816>
4.0638 seconds
Tested. Sparse categorical accuracy: 90.00

round 10, metrics=<sparse_categorical_accuracy=0.8884999752044678,loss=0.37513506412506104>
4.0863 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.906166672706604,loss=0.3212277889251709>
4.1106 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9183333516120911,loss=0.26640284061431885>
4.1351 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
