
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:20:50.192023: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  177
2020-07-15 23:20:49.707166

How often each label is chosen for non-IID data
[18, 21, 15, 23, 20, 21, 23, 13, 24, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.11050000041723251,loss=2.286065101623535>
5.7458 seconds
Tested. Sparse categorical accuracy: 16.67

round  2, metrics=<sparse_categorical_accuracy=0.1525000035762787,loss=2.254517078399658>
4.5880 seconds
Tested. Sparse categorical accuracy: 30.00

round  3, metrics=<sparse_categorical_accuracy=0.2721666693687439,loss=2.1768369674682617>
4.3980 seconds
Tested. Sparse categorical accuracy: 63.33

round  4, metrics=<sparse_categorical_accuracy=0.320333331823349,loss=2.2712814807891846>
4.4199 seconds
Tested. Sparse categorical accuracy: 20.00

round  5, metrics=<sparse_categorical_accuracy=0.31049999594688416,loss=2.10583233833313>
4.3939 seconds
Tested. Sparse categorical accuracy: 23.33

round  6, metrics=<sparse_categorical_accuracy=0.42149999737739563,loss=1.965530276298523>
4.2790 seconds
Tested. Sparse categorical accuracy: 73.33

round  7, metrics=<sparse_categorical_accuracy=0.5846666693687439,loss=1.5145783424377441>
4.2539 seconds
Tested. Sparse categorical accuracy: 76.67

round  8, metrics=<sparse_categorical_accuracy=0.6326666474342346,loss=1.2990487813949585>
4.0088 seconds
Tested. Sparse categorical accuracy: 76.67

round  9, metrics=<sparse_categorical_accuracy=0.7741666436195374,loss=0.8013755679130554>
4.3320 seconds
Tested. Sparse categorical accuracy: 76.67

round 10, metrics=<sparse_categorical_accuracy=0.8413333296775818,loss=0.5621511936187744>
4.2270 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.8370000123977661,loss=0.5911076068878174>
4.1584 seconds
Tested. Sparse categorical accuracy: 83.33

round 12, metrics=<sparse_categorical_accuracy=0.8830000162124634,loss=0.41006702184677124>
4.0187 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
