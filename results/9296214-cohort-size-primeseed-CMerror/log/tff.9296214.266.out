
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:30:03.944883: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  266
2020-07-15 23:30:03.391962

How often each label is chosen for non-IID data
[17, 33, 11, 17, 15, 23, 19, 25, 18, 22]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.08733333647251129,loss=2.302990674972534>
4.1701 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.12666666507720947,loss=2.295349359512329>
3.0196 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.13733333349227905,loss=2.2873191833496094>
3.0170 seconds
Tested. Sparse categorical accuracy: 31.67

round  4, metrics=<sparse_categorical_accuracy=0.10899999737739563,loss=2.265104293823242>
2.8514 seconds
Tested. Sparse categorical accuracy: 35.00

round  5, metrics=<sparse_categorical_accuracy=0.23499999940395355,loss=2.2088472843170166>
3.2578 seconds
Tested. Sparse categorical accuracy: 38.33

round  6, metrics=<sparse_categorical_accuracy=0.32100000977516174,loss=2.152512788772583>
2.8187 seconds
Tested. Sparse categorical accuracy: 55.00

round  7, metrics=<sparse_categorical_accuracy=0.43533334136009216,loss=2.1577608585357666>
3.0588 seconds
Tested. Sparse categorical accuracy: 53.33

round  8, metrics=<sparse_categorical_accuracy=0.476666659116745,loss=1.9268443584442139>
2.7937 seconds
Tested. Sparse categorical accuracy: 70.00

round  9, metrics=<sparse_categorical_accuracy=0.5329999923706055,loss=2.00260591506958>
3.2024 seconds
Tested. Sparse categorical accuracy: 35.00

round 10, metrics=<sparse_categorical_accuracy=0.4440000057220459,loss=1.7441438436508179>
2.6419 seconds
Tested. Sparse categorical accuracy: 46.67

round 11, metrics=<sparse_categorical_accuracy=0.6119999885559082,loss=1.3663758039474487>
3.1551 seconds
Tested. Sparse categorical accuracy: 60.00

round 12, metrics=<sparse_categorical_accuracy=0.7266666889190674,loss=0.8448846936225891>
3.4298 seconds
Tested. Sparse categorical accuracy: 70.00

round 13, metrics=<sparse_categorical_accuracy=0.7146666646003723,loss=1.0439730882644653>
3.1319 seconds
Tested. Sparse categorical accuracy: 80.00

round 14, metrics=<sparse_categorical_accuracy=0.7896666526794434,loss=0.7608016133308411>
3.1040 seconds
Tested. Sparse categorical accuracy: 95.00

round 15, metrics=<sparse_categorical_accuracy=0.8489999771118164,loss=0.5383801460266113>
3.1267 seconds
Tested. Sparse categorical accuracy: 85.00

round 16, metrics=<sparse_categorical_accuracy=0.8566666841506958,loss=0.5327582359313965>
3.1685 seconds
Tested. Sparse categorical accuracy: 78.33

round 17, metrics=<sparse_categorical_accuracy=0.8673333525657654,loss=0.4672513008117676>
2.7269 seconds
Tested. Sparse categorical accuracy: 88.33

round 18, metrics=<sparse_categorical_accuracy=0.9013333320617676,loss=0.3590996563434601>
3.1183 seconds
Tested. Sparse categorical accuracy: 90.00

round 19, metrics=<sparse_categorical_accuracy=0.878333330154419,loss=0.3998505175113678>
2.6358 seconds
Tested. Sparse categorical accuracy: 86.67

round 20, metrics=<sparse_categorical_accuracy=0.8976666927337646,loss=0.3640301525592804>
2.6837 seconds
Tested. Sparse categorical accuracy: 88.33

round 21, metrics=<sparse_categorical_accuracy=0.9283333420753479,loss=0.25020039081573486>
2.7126 seconds
Tested. Sparse categorical accuracy: 96.67

round 22, metrics=<sparse_categorical_accuracy=0.893666684627533,loss=0.36727336049079895>
3.1601 seconds
Tested. Sparse categorical accuracy: 100.00

round 23, metrics=<sparse_categorical_accuracy=0.9313333630561829,loss=0.21689145267009735>
2.8880 seconds
Tested. Sparse categorical accuracy: 91.67

round 24, metrics=<sparse_categorical_accuracy=0.9200000166893005,loss=0.2529194951057434>
3.3147 seconds
Tested. Sparse categorical accuracy: 91.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 60]
