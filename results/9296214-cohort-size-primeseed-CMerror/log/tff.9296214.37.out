
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:07:05.210387: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  37
2020-07-15 23:07:04.707262

How often each label is chosen for non-IID data
[18, 16, 18, 24, 27, 20, 21, 20, 18, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.15033333003520966,loss=2.2803351879119873>
7.6872 seconds
Tested. Sparse categorical accuracy: 13.33

round  2, metrics=<sparse_categorical_accuracy=0.21583333611488342,loss=2.2433767318725586>
6.1225 seconds
Tested. Sparse categorical accuracy: 53.33

round  3, metrics=<sparse_categorical_accuracy=0.4009999930858612,loss=2.2277209758758545>
5.6853 seconds
Tested. Sparse categorical accuracy: 66.67

round  4, metrics=<sparse_categorical_accuracy=0.48500001430511475,loss=2.0587551593780518>
5.5471 seconds
Tested. Sparse categorical accuracy: 56.67

round  5, metrics=<sparse_categorical_accuracy=0.518833339214325,loss=1.7381033897399902>
6.1073 seconds
Tested. Sparse categorical accuracy: 86.67

round  6, metrics=<sparse_categorical_accuracy=0.6309999823570251,loss=1.261099100112915>
5.8791 seconds
Tested. Sparse categorical accuracy: 66.67

round  7, metrics=<sparse_categorical_accuracy=0.7135000228881836,loss=0.947005033493042>
5.2773 seconds
Tested. Sparse categorical accuracy: 86.67

round  8, metrics=<sparse_categorical_accuracy=0.7900000214576721,loss=0.7326346039772034>
5.8971 seconds
Tested. Sparse categorical accuracy: 83.33

round  9, metrics=<sparse_categorical_accuracy=0.8606666922569275,loss=0.4770694971084595>
5.7312 seconds
Tested. Sparse categorical accuracy: 100.00

round 10, metrics=<sparse_categorical_accuracy=0.8868333101272583,loss=0.3774513304233551>
5.2737 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.8898333311080933,loss=0.3566083312034607>
5.5386 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9045000076293945,loss=0.30919572710990906>
5.3070 seconds
Tested. Sparse categorical accuracy: 93.33

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
