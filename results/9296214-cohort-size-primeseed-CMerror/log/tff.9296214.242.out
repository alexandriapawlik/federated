
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:27:23.908240: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  242
2020-07-15 23:27:23.427248

How often each label is chosen for non-IID data
[22, 17, 16, 14, 21, 17, 28, 25, 20, 20]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.14800000190734863,loss=2.2855279445648193>
5.8663 seconds
Tested. Sparse categorical accuracy: 3.33

round  2, metrics=<sparse_categorical_accuracy=0.20266667008399963,loss=2.246657133102417>
4.2911 seconds
Tested. Sparse categorical accuracy: 33.33

round  3, metrics=<sparse_categorical_accuracy=0.31966665387153625,loss=2.2137062549591064>
4.4471 seconds
Tested. Sparse categorical accuracy: 60.00

round  4, metrics=<sparse_categorical_accuracy=0.5248333215713501,loss=2.189805269241333>
4.3043 seconds
Tested. Sparse categorical accuracy: 33.33

round  5, metrics=<sparse_categorical_accuracy=0.343833327293396,loss=2.081174373626709>
4.2041 seconds
Tested. Sparse categorical accuracy: 50.00

round  6, metrics=<sparse_categorical_accuracy=0.578499972820282,loss=1.5908758640289307>
4.2943 seconds
Tested. Sparse categorical accuracy: 76.67

round  7, metrics=<sparse_categorical_accuracy=0.7141666412353516,loss=1.0315871238708496>
4.0690 seconds
Tested. Sparse categorical accuracy: 80.00

round  8, metrics=<sparse_categorical_accuracy=0.7720000147819519,loss=0.7864056825637817>
4.2660 seconds
Tested. Sparse categorical accuracy: 80.00

round  9, metrics=<sparse_categorical_accuracy=0.8621666431427002,loss=0.4774032533168793>
4.1377 seconds
Tested. Sparse categorical accuracy: 93.33

round 10, metrics=<sparse_categorical_accuracy=0.8668333292007446,loss=0.4720551073551178>
4.2058 seconds
Tested. Sparse categorical accuracy: 100.00

round 11, metrics=<sparse_categorical_accuracy=0.906166672706604,loss=0.31958839297294617>
4.1484 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.9143333435058594,loss=0.28818026185035706>
4.2561 seconds
Tested. Sparse categorical accuracy: 96.67

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
