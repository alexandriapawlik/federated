
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:05:17.453929: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  17
2020-07-15 23:05:16.968969

How often each label is chosen for non-IID data
[20, 19, 13, 24, 17, 24, 18, 22, 25, 18]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13449999690055847,loss=2.287152051925659>
5.5847 seconds
Tested. Sparse categorical accuracy: 33.33

round  2, metrics=<sparse_categorical_accuracy=0.19233334064483643,loss=2.2353625297546387>
4.3238 seconds
Tested. Sparse categorical accuracy: 50.00

round  3, metrics=<sparse_categorical_accuracy=0.33816665410995483,loss=2.259274959564209>
4.2524 seconds
Tested. Sparse categorical accuracy: 26.67

round  4, metrics=<sparse_categorical_accuracy=0.3073333203792572,loss=2.1206045150756836>
4.0632 seconds
Tested. Sparse categorical accuracy: 50.00

round  5, metrics=<sparse_categorical_accuracy=0.4216666519641876,loss=2.0428030490875244>
4.0373 seconds
Tested. Sparse categorical accuracy: 60.00

round  6, metrics=<sparse_categorical_accuracy=0.5233333110809326,loss=1.6532344818115234>
4.0880 seconds
Tested. Sparse categorical accuracy: 50.00

round  7, metrics=<sparse_categorical_accuracy=0.6535000205039978,loss=1.0977866649627686>
4.0296 seconds
Tested. Sparse categorical accuracy: 76.67

round  8, metrics=<sparse_categorical_accuracy=0.7566666603088379,loss=0.7797189950942993>
3.9840 seconds
Tested. Sparse categorical accuracy: 86.67

round  9, metrics=<sparse_categorical_accuracy=0.8349999785423279,loss=0.5695176124572754>
4.1645 seconds
Tested. Sparse categorical accuracy: 80.00

round 10, metrics=<sparse_categorical_accuracy=0.8820000290870667,loss=0.414592444896698>
4.1568 seconds
Tested. Sparse categorical accuracy: 96.67

round 11, metrics=<sparse_categorical_accuracy=0.9021666646003723,loss=0.372219979763031>
3.9183 seconds
Tested. Sparse categorical accuracy: 96.67

round 12, metrics=<sparse_categorical_accuracy=0.9038333296775818,loss=0.3225187063217163>
4.1325 seconds
Tested. Sparse categorical accuracy: 90.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
