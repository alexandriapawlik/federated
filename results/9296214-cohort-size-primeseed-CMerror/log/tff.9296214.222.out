
TENSORFLOW USERS:
You must use the python3.6-anaconda/5.2.0 module to run TensorFlow.
See https://arc-ts.umich.edu/greatlakes/software/tensorflow for more
information.



The following have been reloaded with a version change:
  1) cuda/10.0.130 => cuda/10.1.105


Currently Loaded Modules:
  1) python3.7-anaconda/2019.07   2) cudnn/10.0-v7.6   3) cuda/10.1.105

 

mkdir: cannot create directory ‘results/9296214’: File exists
mkdir: cannot create directory ‘results/9296214/log’: File exists
2020-07-15 23:25:20.318653: E tensorflow/stream_executor/cuda/cuda_driver.cc:313] failed call to cuInit: UNKNOWN ERROR (303)
Test  222
2020-07-15 23:25:19.825292

How often each label is chosen for non-IID data
[24, 23, 23, 19, 22, 15, 17, 20, 16, 21]

Schema 1: Each client partially IID
--------------------------------------------------
percent data distributed IID:  80
number of classes for non-IID data:  2
data points per client (mean, std dev): ( 600 ,  0 )
--------------------------------------------------
round  1, metrics=<sparse_categorical_accuracy=0.13566666841506958,loss=2.288635015487671>
5.9564 seconds
Tested. Sparse categorical accuracy: 20.00

round  2, metrics=<sparse_categorical_accuracy=0.15416666865348816,loss=2.2566070556640625>
4.3819 seconds
Tested. Sparse categorical accuracy: 20.00

round  3, metrics=<sparse_categorical_accuracy=0.31283333897590637,loss=2.161128044128418>
4.2489 seconds
Tested. Sparse categorical accuracy: 46.67

round  4, metrics=<sparse_categorical_accuracy=0.36266666650772095,loss=2.3138644695281982>
4.1668 seconds
Tested. Sparse categorical accuracy: 6.67

round  5, metrics=<sparse_categorical_accuracy=0.17666666209697723,loss=2.2675819396972656>
4.5147 seconds
Tested. Sparse categorical accuracy: 40.00

round  6, metrics=<sparse_categorical_accuracy=0.35199999809265137,loss=2.1319363117218018>
4.4007 seconds
Tested. Sparse categorical accuracy: 50.00

round  7, metrics=<sparse_categorical_accuracy=0.515999972820282,loss=1.9068330526351929>
4.2545 seconds
Tested. Sparse categorical accuracy: 30.00

round  8, metrics=<sparse_categorical_accuracy=0.5478333234786987,loss=1.5291858911514282>
4.4760 seconds
Tested. Sparse categorical accuracy: 66.67

round  9, metrics=<sparse_categorical_accuracy=0.7110000252723694,loss=1.0535718202590942>
4.5332 seconds
Tested. Sparse categorical accuracy: 83.33

round 10, metrics=<sparse_categorical_accuracy=0.7996666431427002,loss=0.6769673824310303>
4.3010 seconds
Tested. Sparse categorical accuracy: 66.67

round 11, metrics=<sparse_categorical_accuracy=0.8496666550636292,loss=0.5200952291488647>
4.4477 seconds
Tested. Sparse categorical accuracy: 86.67

round 12, metrics=<sparse_categorical_accuracy=0.8769999742507935,loss=0.4222700297832489>
4.2059 seconds
Tested. Sparse categorical accuracy: 100.00

Final confusion matrix
Traceback (most recent call last):
  File "R_tff_main.py", line 28, in <module>
    p1.go(test, batch)
  File "/home/apawlik/federated/R_1_each_client_partially_iid.py", line 208, in go
    self.train(num, batch, 1)
  File "/home/apawlik/federated/R_partitioner.py", line 320, in train
    print(confusion_matrix(actuals, preds, labels = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 253, in confusion_matrix
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/metrics/classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "/sw/arcts/centos7/python3.7-anaconda/2019.07/lib/python3.7/site-packages/sklearn/utils/validation.py", line 205, in check_consistent_length
    " samples: %r" % [int(l) for l in lengths])
ValueError: Found input variables with inconsistent numbers of samples: [10000, 30]
